sp {apply*change-predicate
   (state <s> ^operator <o>
              ^svs.command <cmd>
              ^negations.<sign> <nsign>)
   (<o> ^name change-predicate
        ^predicate <pred>
        ^params <p>
        ^sign <sign>)
-->
   (<cmd> ^seek <sk>)
   (<sk> ^type naive
         ^depth 1
         ^to-change <c>)
   (<c> ^predicate <pred>
        ^params <p>
        ^sign <sign>)}

sp {propose*wait-for-seek*2-param
   (state <s> ^curr-state <cs>
              ^svs.command.seek <sk>
              ^time <t>)
   (<sk> ^status success
         ^to-change <tc>)
   (<tc> ^sign <sign>
         ^predicate <pred>
         ^params <p1>)
   (<p1> ^<param1> <v1>
         ^{<param2> > <param1>} <v2>
        -^{<param3> > <param2>})
   (<cs> ^<sign>.<pred> <p2>)
   (<p2> ^<param1> <v1>
         ^<param2> <v2>)
-->
   (<s> ^operator <o> +)
   (<o> ^name wait)}

sp {apply*wait-for-seek
   (state <s> ^time <t>
              ^operator.name wait)
-->
   (<s> ^time <t> - (+ <t> 1))}

sp {elab*intersect-obj
   (state <s> ^svs.command.seek <sk>
              ^negations.<sign> <nsign>)
   (<sk> ^to-change <c>)
   (<c> ^predicate intersect
        ^params <p>
        ^sign <sign>)
   (<p> ^a <a> ^b <b>)
-->
   (<sk> ^objective <obj>)
   (<obj> ^name euclidean
          ^sign <nsign>
          ^a <a>
          ^b <b>)}

sp {elab*horizontally-aligned-obj
   (state <s> ^svs.command.seek <sk>
              ^negations.<sign> <nsign>)
   (<sk> ^to-change <c>)
   (<c> ^predicate horizontally-aligned
        ^params <p>
        ^sign <sign>)
   (<p> ^a <a> ^b <b>)
-->
   (<sk> ^objective <obj>)
   (<obj> ^name abs_axis_diff
          ^sign <nsign>
          ^a <a>
          ^b <b>
          ^axis 1)}

sp {elab*vertically-aligned-obj
   (state <s> ^svs.command.seek <sk>
              ^negations.<sign> <nsign>)
   (<sk> ^to-change <c>)
   (<c> ^predicate vertically-aligned
        ^params <p>
        ^sign <sign>)
   (<p> ^a <a> ^b <b>)
-->
   (<sk> ^objective <obj>)
   (<obj> ^name abs_axis_diff
          ^sign <nsign>
          ^a <a>
          ^b <b>
          ^axis 0)}

sp {elab*north-of-obj
   (state <s> ^svs.command.seek <sk>
              ^negations.<sign> <nsign>)
   (<sk> ^to-change <c>)
   (<c> ^predicate north-of
        ^params <p>
        ^sign <sign>)
   (<p> ^a <a> ^b <b>)
-->
   (<sk> ^objective <obj>)
   (<obj> ^name axis_diff
          ^sign <nsign>
          ^a <a>
          ^b <b>
          ^axis 1)}

sp {elab*south-of-obj
   (state <s> ^svs.command.seek <sk>)
   (<sk> ^to-change <c>)
   (<c> ^predicate south-of
        ^params <p>
        ^sign <sign>)
   (<p> ^a <a> ^b <b>)
-->
   (<sk> ^objective <obj>)
   (<obj> ^name axis_diff
          ^sign <sign>
          ^a <a>
          ^b <b>
          ^axis 1)}

sp {elab*east-of-obj
   (state <s> ^svs.command.seek <sk>)
   (<sk> ^to-change <c>)
   (<c> ^predicate east-of
        ^params <p>
        ^sign <sign>)
   (<p> ^a <a> ^b <b>)
-->
   (<sk> ^objective <obj>)
   (<obj> ^name axis_diff
          ^sign <sign>
          ^a <a>
          ^b <b>
          ^axis 0)}

sp {elab*west-of-obj
   (state <s> ^svs.command.seek <sk>
              ^negations.<sign> <nsign>)
   (<sk> ^to-change <c>)
   (<c> ^predicate west-of
        ^params <p>
        ^sign <sign>)
   (<p> ^a <a> ^b <b>)
-->
   (<sk> ^objective <obj>)
   (<obj> ^name axis_diff
          ^sign <nsign>
          ^a <a>
          ^b <b>
          ^axis 0)}
