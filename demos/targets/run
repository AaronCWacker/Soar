#!/bin/sh

set -m # for job control

root=../../../../out
export LD_LIBRARY_PATH=$root/lib:$HOME/local/lib:$LD_LIBRARY_PATH
soar=$root/bin/cli
agent=agent/targets.soar

export SVS_DATA_PIPE=/tmp/datavis
#export SVS_DISPLAY_PIPE=/tmp/dispfifo

# kill all old jobs first
ps | awk '$4 == "run" && $1 != '"$$"' { system("kill " $1) }'
rm -f env ctrl

run_env() {
	while [ ! -S env ]
	do
		sleep 0.5
	done
	socat unix-connect:env exec:"python targets.py $*"
}

run_remote() {
	if [ -z "$1" ]
	then
		return
	fi
	
	while [ ! -p ctrl ]
	do
		sleep 0.5
	done
	
	case "$1" in
	log)
		cat remote.log >ctrl
		return
		;;
	gui)
		python remote.py
		return
		;;
	fixed)
		for i in `seq $2`
		do
			echo "$3 $4"
		done >ctrl
		;;
	*)
		echo "unknown remote argument $1" >&2
		exit 1
	esac
}

while test -n "$1"
do
	case "$1" in
	-g)
		debug=1
		;;
	-gg)
		debug=2
		;;
	-r)
		remote_args="$2"
		shift
		;;
	-e)
		env_args="$2"
		shift
		;;
	-m)
		agent=agent/manual.soar
		;;
	*)
		break
		;;
	esac
	shift
done

run_env $env_args &
envpid=$!
run_remote $remote_args &
remotepid=$!

case "$debug" in
1)
	gdb --args $soar -s $agent "$@"
	;;
2)
	gdb -ex run -ex quit --args $soar -s $agent "$@" | tee stdout.log
	if grep -q 'exited normally' stdout.log
	then
		soarexit=0
	else
		soarexit=1
	fi
	rm stdout.log
	;;
*)
	$soar -s $agent "$@"
	#echo "$!" > soar.pid
	#fg
	#ltrace -c $soar $agent 2>soar.trace
	soarexit=$?
esac

kill $envpid
kill $remotepid

pyprocs=`ps | awk '$4 == "python" {print $1}'`
if [ -n "$pyprocs" ]
then
	kill $pyprocs
fi

rm -f env ctrl

if [ "$soarexit" -ne 0 ]
then
	exit 1
fi
