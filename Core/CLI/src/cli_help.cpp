/* Auto-generated by gen_cli_help.sh on Tue Sep  9 19:17:07 EDT 2014 using rev 4e24e22 */
#include <map>
#include "portability.h"
#include "cli_CommandLineInterface.h"

using namespace cli;
using namespace sml;

std::map<std::string, const char*> docstrings;

void initdocstrings();

bool CommandLineInterface::DoHelp(const std::vector<std::string>& argv)
{
    std::map<std::string, const char*>::iterator i;
    
    if (docstrings.size() == 0)
    {
        initdocstrings();
    }
    
    if (argv.size() == 1)
    {
        m_Result << "Available commands:" << std::endl << std::endl;
        for (i = docstrings.begin(); i != docstrings.end(); ++i)
        {
            m_Result << i->first << std::endl;
        }
    }
    else
    {
        if ((i = docstrings.find(argv[1])) == docstrings.end())
        {
            m_Result << "No such command" << std::endl;
            return false;
        }
        m_Result << i->second;
    }
    return true;
}

void initdocstrings()
{
	docstrings["add_wme.wiki."] = 
		"#summary add-wme command documentation = add-wme = Manually add an element to\n"
		"working memory. == Synopsis == {{{ add-wme id [^]attribute value [+] }}} ===\n"
		"Default Aliases === || `aw` || `add-wme` || == Options == || `id` || Must be an\n"
		"existing identifier. || || `^` || Leading `^` on attribute is optional. || ||\n"
		"`attribute` || Attribute can be any Soar symbol. Use `*` to have Soar create a\n"
		"new identifier. || || `value` || Value can be any soar symbol. Use `*` to have\n"
		"Soar create a new identifier. || || `+` || If the optional preference is\n"
		"specified, its value must be `+` (acceptable). || == Description == Manually\n"
		"add an element to working memory. add-wme is often used by an input function to\n"
		"update Soar's information about the state of the external world. add-wme adds a\n"
		"new wme with the given id, attribute, value and optional preference. The given\n"
		"id must be an existing identifier. The attribute and value fields can be any\n"
		"Soar symbol. If `*` is given in the attribute or value field, Soar creates a\n"
		"new identifier (symbol) for that field. If the preference is given, it can only\n"
		"have the value `+` to indicate that an acceptable preference should be created\n"
		"for this wme. Note that because the id must already exist in working memory,\n"
		"the WME that you are adding will be attached (directly or indirectly) to the\n"
		"top-level state. As with other WME's, any WME added via a call to add-wme will\n"
		"automatically be removed from working memory once it is no longer attached to\n"
		"the top-level state. == Examples == This example adds the attribute/value pair\n"
		"`^message-status received` to the identifier (symbol) S1: {{{ add-wme S1 ^\n"
		"message-status received }}} This example adds an attribute/value pair with an\n"
		"acceptable preference to the identifier (symbol) Z2. The attribute is `message`\n"
		"and the value is a unique identifier generated by Soar. Note that since the `^`\n"
		"is optional, it has been left off in this case. {{{ add-wme Z2 message * + }}}\n"
		"== Warnings == Be careful how you use this command. It may have weird side\n"
		"effects (possibly even including system crashes). For example, the chunker\n"
		"can't backtrace through wmes created via add-wme nor will such wmes ever be\n"
		"removed thru Soar's garbage collection. Manually removing context/impasse wmes\n"
		"may have unexpected side effects. == See Also == [cmd_remove_wme remove-wme]\n"
	;
	docstrings["alias.wiki."] = 
		"#summary alias command documentation = alias = Define a new alias, or command,\n"
		"using existing commands and arguments. == Synopsis == {{{ alias [name [cmd\n"
		"[args]]] }}} === Default Aliases === || `a` || `alias` || == Description ==\n"
		"This command defines new aliases by creating Soar procedures with the given\n"
		"name. The new procedure can then take an arbitrary number of arguments which\n"
		"are post-pended to the given definition and then that entire string is executed\n"
		"as a command. The definition must be a single command, multiple commands are\n"
		"not allowed. The alias procedure checks to see if the name already exists, and\n"
		"does not destroy existing procedures or aliases by the same name. Existing\n"
		"aliases can be removed by using the [cmd_unalias unalias] command. With no\n"
		"arguments, alias returns the list of defined aliases. With only the name given,\n"
		"alias returns the current definition. == Examples == The alias `wmes` is\n"
		"defined as: {{{ alias wmes print -i }}} If the user executes a command such as:\n"
		"{{{ wmes {(* ^superstate nil)} }}} ... it is as if the user had typed this\n"
		"command: {{{ print -i {(* ^superstate nil)} }}} To check what a specific alias\n"
		"is defined as, you would type {{{ alias wmes }}} == See Also == [cmd_unalias\n"
		"unalias]\n"
	;
	docstrings["allocate.wiki."] = 
		"#summary allocate command documentation = allocate = Allocate additional 32\n"
		"kilobyte blocks of memory for a specified memory pool without running Soar. ==\n"
		"Synopsis == {{{ allocate [pool blocks] }}} == Description == Soar allocates\n"
		"blocks of memory for its memory pools as it is needed during a run (or during\n"
		"other actions like loading productions). Unfortunately, this behavior\n"
		"translates to an increased run time for the first run of a memory-intensive\n"
		"agent. To mitigate this, blocks can be allocated before a run by using this\n"
		"command. Issuing the command with no parameters lists current pool usage,\n"
		"exactly like [cmd_stats stats] command's memory flag. Issuing the command with\n"
		"part of a pool's name and a positive integer will allocate that many additional\n"
		"blocks for the specified pool. Only the first few letters of the pool's name\n"
		"are necessary. If more than one pool starts with the given letters, which pool\n"
		"will be chosen is unspecified. Memory pool block size in this context is\n"
		"approximately 32 kilobytes, the exact size determined during agent\n"
		"initialization. == See Also == [cmd_stats stats]\n"
	;
	docstrings["capture_input.wiki."] = 
		"#summary capture-input command documentation = capture-input = Store the input\n"
		"wmes in a file for reloading later. == Synopsis == {{{ capture-input --open\n"
		"filename [--flush] capture-input [--query] capture-input --close }}} == Options\n"
		"== || `filename` || Open filename and begin recording input. || || `-o, --open`\n"
		"|| Writes captured input to file overwriting any existing data. || || `-f, --\n"
		"flush` || Writes input to file as soon as it is encountered instead of storing\n"
		"it in RAM and writing when capturing is turned off. || || `-q, --query` ||\n"
		"Returns open if input capturing is active or closed if capturing is not active.\n"
		"|| || `-c, --close` || Stop capturing input and close the file, writing\n"
		"captured input unless the flush option is given. || == Description == Save\n"
		"agent commands issued from the input cycle function in a file for reloading\n"
		"later. This command may be used to start and stop the recording of input\n"
		"function commands as created by an external simulation. Commands are recorded\n"
		"decision cycle by decision cycle. Use the command [cmd_replay_input replay-\n"
		"input] to replay the sequence. Note that this command seeds the random number\n"
		"generator and writes the seed to the capture file. == See Also ==\n"
		"[cmd_replay_input replay-input]\n"
	;
	docstrings["cd.wiki."] = 
		"#summary cd command documentation = cd = Change directory. == Synopsis == {{ {\n"
		"cd [directory] }}} === Default Aliases === || `chdir` || `cd` || == Options ==\n"
		"|| `directory` || The directory to change to, can be relative or full path. ||\n"
		"== Description == Change the current working directory. If run with no\n"
		"arguments, returns to the directory that the command line interface was started\n"
		"in, often referred to as the _home_ directory. == Examples == To move to the\n"
		"relative directory named `../home/soar/agents`: {{{ cd ../home/soar/agents }}}\n"
		"== See Also == [cmd_dirs dirs] [cmd_ls ls] [cmd_pushd pushd] [cmd_popd popd]\n"
		"[cmd_source source] [cmd_pwd pwd]\n"
	;
	docstrings["chunk_name_format.wiki."] = 
		"#summary chunk-name-format command documentation = chunk-name-format = Specify\n"
		"format of the name to use for new chunks. == Synopsis == {{{ chunk-name-format\n"
		"[-nrl] -p [prefix] chunk-name-format [-nrl] -c [count] }}} == Options == || `-\n"
		"n, --numbered` || Name chunks based on the order in which they were created ||\n"
		"|| `-r, --rule` || Name chunks based on the rule that created the result\n"
		"(default) || || `-l, --long` || Name chunks based on the impasse type that\n"
		"created the substate || || `-p, --prefix [p]` || If given, use `p` as the\n"
		"prefix for naming chunks. Otherwise, return the current prefix. (defaults to\n"
		"_chunk_) || || `-c, --count [c]` || If given, set the chunk counter for naming\n"
		"chunks to `c`. Otherwise, return the current value of the chunk counter. || ==\n"
		"Description == The short format for naming newly-created chunks is: {{{ }}} The\n"
		"rule-based (default) format for naming chunks is: {{{ ***- }}} The long format\n"
		"for naming chunks is: {{{ --** }}} where: * `prefix` is a user-definable prefix\n"
		"string; `prefix` defaults to _chunk_ when unspecified by the user. It many not\n"
		"contain the character `*`, * `original-rule-name` is the name of the production\n"
		"that produced the result that resulted in this chunk, * `chunknum` is a counter\n"
		"set by `--count` or starting at 1 for the first chunk created, * `dc` is the\n"
		"number of the decision cycle in which the chunk was formed, * `impassetype` is\n"
		"one of `tie`, `conflict`, `cfailure`, `snochange`, `opnochange`, *\n"
		"`short-impassetype` is one of `tie`, `con`, `cfi`, `snc`, `onc`, * `dcChunknum`\n"
		"is the number of the chunk within that specific decision cycle. Note that when\n"
		"using the rule-based naming format, a chunk based on another chunk will have a\n"
		"name that beings with `prefix` followed by `-multi`, for example *\n"
		"`chunk-multi*apply-rule*42-2`*.\n"
	;
	docstrings["cli.wiki."] = 
		"#summary cli command documentation = cli = Manipulate external command line\n"
		"interface modules. == Synopsis == {{{ cli on|off }}} == Options == || `on` ||\n"
		"Turn a command-line module on. || || `off` || Turn a command-line module on ||\n"
		"== Description == The `cli` command is used to interface to special, external\n"
		"libraries that extend the functionality of the Soar command line interface. For\n"
		"example, a module may provide the ability to run Tcl or Python code from any\n"
		"Soar command line. The first time that you turn a module on, Soar will attempt\n"
		"to look for a dynamically-linked library based on the module-name passed to the\n"
		"cli command. Specifically, it looks for a dll named `[dllprefix] [language]\n"
		"SoarLib.[dllextension]` (The dll prefix and extension vary depending on the\n"
		"platform.) When the `on` parameter is given, all future Soar commands will be\n"
		"passed to the module for processing. This allows the module to provide\n"
		"additional functionality. Similarly, the off message will send the CLI library\n"
		"an `off` message that will cause it to unregister all relevant callback\n"
		"handlers and stop processing Soar commands. == Examples == To turn on Tcl mode:\n"
		"{{{ cli tcl on }}} To turn off Tcl mode: {{{ cli tcl off }}}\n"
	;
	docstrings["clog.wiki."] = 
		"#summary clog command documentation = clog = Record all user-interface input\n"
		"and output to a file. == Synopsis == {{{ clog -[Ae] filename clog -a string\n"
		"clog [-cdoq] }}} == Options == || `filename` || Open filename and begin\n"
		"logging. || || `-c, --close, -o, --off, -d, --disable` || Stop logging, close\n"
		"the file. || || `-a, --add string` || Add the given string to the open log\n"
		"file. || || `-q, --query` || Returns open if logging is active or closed if\n"
		"logging is not active. || || `-A, --append, -e, --existing` || Opens existing\n"
		"log file named `filename` and logging is added at the end of the file. || ==\n"
		"Description == The `clog` command allows users to save all user-interface input\n"
		"and output to a file. When Soar is logging to a file, everything typed by the\n"
		"user and everything printed by Soar is written to the file (in addition to the\n"
		"screen). Invoke `clog` with no arguments (or with `-q`) to query the current\n"
		"logging status. Pass a filename to start logging to that file (relative to the\n"
		"command line interface's home directory). Use the `close` option to stop\n"
		"logging. == Examples == To initiate logging and place the record in foo.log: {{\n"
		"{ clog foo.log }}} To append log data to an existing foo.log file: {{{ clog - A\n"
		"foo.log }}} To terminate logging and close the open log file: {{{ clog -c }}} =\n"
		"= Known Issues == Does not log everything when structured output is selected. =\n"
		"= See also == [cmd_command_to_file command-to-file]\n"
	;
	docstrings["command_to_file.wiki."] = 
		"#summary command-to-file command documentation = command-to-file = Dump the\n"
		"printed output and results of a command to a file. == Synopsis == {{{ command-\n"
		"to-file [-a] filename command [args] }}} == Options == || `-a, --append` ||\n"
		"Append if file exists. || || `filename` || The file to log the results of the\n"
		"command to || || `command` || The command to log || || `args` || Arguments for\n"
		"command || == Description == This command logs a single command. It is almost\n"
		"equivalent to opening a log using [cmd_clog clog], running the command, then\n"
		"closing the log, the only difference is that input isn't recorded. Running this\n"
		"command while a log is open is an error. There is currently not support for\n"
		"multiple logs in the command line interface, and this would be an instance of\n"
		"multiple logs. This command echos output both to the screen and to a file, just\n"
		"like clog. == See also == [cmd_clog clog]\n"
	;
	docstrings["default_wme_depth.wiki."] = 
		"#summary default-wme-depth command documentation = default-wme-depth = Set the\n"
		"level of detail used to print WMEs. == Synopsis == {{{ default-wme-depth\n"
		"[depth] }}} === Default Aliases === || `set-default-depth` || `default-wme-\n"
		"depth` || == Options == || `depth` || A non-negative integer. || == Description\n"
		"== The default-wme-depth command reflects the default depth used when working\n"
		"memory elements are printed (using the [cmd_print print]). The default value is\n"
		"1. When the command is issued with no arguments, default-wme-depth returns the\n"
		"current value of the default depth. When followed by an integer value, default-\n"
		"wme-depth sets the default depth to the specified value. This default depth can\n"
		"be overridden on any particular call to the [cmd_print print] command by\n"
		"explicitly using the `--depth` flag, e.g. `print --depth 10 args`. By default,\n"
		"the [cmd_print print] command prints _objects_ in working memory, not just the\n"
		"individual working memory element. To limit the output to individual working\n"
		"memory elements, the `--internal` flag must also be specified in the [cmd_print\n"
		"print] command. Thus when the print depth is `0`, by default Soar prints the\n"
		"entire object, which is the same behavior as when the print depth is `1`. But\n"
		"if `--internal` is also specified, then a depth of `0` prints just the\n"
		"individual WME, while a depth of `1` prints all WMEs which share that same\n"
		"identifier. This is true when printing timetags, identifiers or WME patterns.\n"
		"When the depth is greater than `1`, the identifier links from the specified\n"
		"WME's will be followed, so that additional substructure is printed. For\n"
		"example, a depth of `2` means that the object specified by the identifier, wme-\n"
		"pattern, or timetag will be printed, along with all other objects whose\n"
		"identifiers appear as values of the first object. This may result in multiple\n"
		"copies of the same object being printed out. If `--internal` is also specified,\n"
		"then individuals WMEs and their timetags will be printed instead of the full\n"
		"objects. == See Also == [cmd_print print]\n"
	;
	docstrings["dirs.wiki."] = 
		"#summary dirs command documentation = dirs = List the directory stack. ==\n"
		"Synopsis == {{{ dirs }}} == Description == This command lists the directory\n"
		"stack. Agents can move through a directory structure by pushing and popping\n"
		"directory names. The dirs command returns the stack. The command [cmd_pushd\n"
		"pushd] places a new \"agent current directory\" on top of the directory stack and\n"
		"changes to it. The command [cmd_popd popd] removes the directory at the top of\n"
		"the directory stack and changes to the previous directory which now appears at\n"
		"the top of the stack. == See Also == [cmd_cd cd] [cmd_ls ls] [cmd_pushd pushd]\n"
		"[cmd_popd popd] [cmd_source source] [cmd_pwd pwd]\n"
	;
	docstrings["echo.wiki."] = 
		"#summary echo command documentation = echo = Print a string to the current\n"
		"output device. == Synopsis == {{{ echo [--nonewline] [string] }}} == Options ==\n"
		"|| `string` || The string to print. || || `-n, --nonewline` || Supress printing\n"
		"of the newline character || == Description == This command echos the args to\n"
		"the current output stream. This is normally stdout but can be set to a variety\n"
		"of channels. If an arg is `--nonewline` then no newline is printed at the end\n"
		"of the printed strings. Otherwise a newline is printed after printing all the\n"
		"given args. Echo is the easiest way to add user comments or identification\n"
		"strings in a log file. == Examples == This example will add these comments to\n"
		"the screen and any open log file. {{{ echo This is the first run with disks =\n"
		"12 }}} == See Also == [cmd_clog clog]\n"
	;
	docstrings["echo_commands.wiki."] = 
		"#summary echo-commands command documentation = echo-commands = Set whether or\n"
		"not commands are echoed to other connected debuggers. == Synopsis == {{{ echo-\n"
		"commands [-yn] }}} == Options == || `-n, --no` || Do not echo commands. || ||\n"
		"`-y, --yes` || Do echo commands. || == Description == Setting this on will echo\n"
		"typed commands to other connected debuggers. Otherwise, the output is displayed\n"
		"without the initiating command, and this can be confusing.\n"
	;
	docstrings["edit_production.wiki."] = 
		"#summary edit-production command documentation = edit-production = Move focus\n"
		"in an editor to this production. == Synopsis == {{{ edit-production\n"
		"production_name }}} == Options == || `production_name` || The name of the\n"
		"production to edit. || == Description == If an editor (currently limited to\n"
		"Visual Soar) is open and connected to Soar, this command causes the editor to\n"
		"open the file containing this production and move the cursor to the start of\n"
		"the production. If there is no editor connected to Soar, the command does\n"
		"nothing. In order to connect Visual Soar to Soar, launch Visual Soar and choose\n"
		"Connect from the Soar Runtime menu. Then open the Visual Soar project that\n"
		"you're working on. At that point, you're set up and edit-production will start\n"
		"to work. == Examples == {{{ edit-production my*production*name }}} == See Also\n"
		"== [cmd_sp sp]\n"
	;
	docstrings["epmem.wiki."] = 
		"#summary epmem command documentation = epmem = Control the behavior of episodic\n"
		"memory. == Synopsis == {{{ epmem epmem -e|--enable|--on epmem -d|--disable|--\n"
		"off epmem -i|--init epmem -c|--close epmem -g|--get epmem -s|--set epmem - S|\n"
		"--stats [] epmem -t|--timers [] epmem -v|--viz epmem -p|--print epmem -b|--\n"
		"backup }}} == Options == || *Option* || *Description* || || `-e, --enable, --\n"
		"on` || Enable episodic memory. || || `-d, --disable, --off` || Disable episodic\n"
		"memory. || || `-i, --init` || Re-initialize episodic memory || || `-c, --close`\n"
		"|| Disconnect from episodic memory || || `-g, --get` || Print current parameter\n"
		"setting || || `-s, --set` || Set parameter value || || `-S, --stats` || Print\n"
		"statistic summary or specific statistic || || `-t, --timers` || Print timer\n"
		"summary or specific statistic || || `-v, --viz` || Print episode in graphviz\n"
		"format || || `-p, --print` || Print episode in user-readable format || || `-b,\n"
		"--backup` || Creates a backup of the episodic database on disk || ==\n"
		"Description == The `epmem` command is used to change all behaviors of the\n"
		"episodic memory module, except for watch output, which is controlled by the\n"
		"`watch --epmem` command. === Parameters === Due to the large number of\n"
		"parameters, the `epmem` command uses the `--get|--set ` convention rather than\n"
		"individual switches for each parameter. Running `epmem` without any switches\n"
		"displays a summary of the parameter settings. ==== Main Parameters ==== ||\n"
		"*Parameter* || *Description* || *Possible values* || *Default* || || `append` |\n"
		"| Controls whether database is overwritten or appended when opening or re-\n"
		"initializing || `on`, `off` || `off` || || `balance` || Linear weight of match\n"
		"cardinality (1) vs. working memory activation (0) used in calculating match\n"
		"score || `[`0, 1`]` || 1 || || `database` || Database storage method || `file`,\n"
		"`memory` || `memory` || || `exclusions` || Toggle the exclusion of an attribute\n"
		"string constant || _any string_ || `epmem, smem` || || `force` || Forces\n"
		"episode encoding/ignoring in the next storage phase || `ignore`, `remember`,\n"
		"`off` || `off` || || `learning` || Episodic memory enabled || `on`, `off` ||\n"
		"`off` || || `merge` || Controls how retrievals interact with long-term\n"
		"identifiers in working memory || `none`, `add` || `none` || || `path` ||\n"
		"Location of database file || _empty_, _some path_ || _empty_ || || `phase` ||\n"
		"Decision cycle phase to encode new episodes and process epmem link commands ||\n"
		"`output`, `selection` || `output` || || `trigger` || How episode encoding is\n"
		"triggered || `dc`, `output`, `none` || `output` || ==== Performance Parameters\n"
		"==== || *Parameter* || *Description* || *Possible values* || *Default* || ||\n"
		"`cache-size` || Number of memory pages used in the SQLite cache || 1, 2, ... ||\n"
		"10000 || || `graph-match` || Graph matching enabled || `on`, `off` || `on` || |\n"
		"| `graph-match-ordering` || Ordering of identifiers during graph match ||\n"
		"`undefined`, `dfs`, `mcv` || `undefined` || || `lazy-commit` || Delay writing\n"
		"semantic store changes to file until agent exits || `on`, `off` || `on` || ||\n"
		"`optimization` || Policy for committing data to disk || `safety`, `performance`\n"
		"|| `performance` || || `page-size` || Size of each memory page used in the\n"
		"SQLite cache || 1k, 2k, 4k, 8k, 16k, 32k, 64k || 8k || || `timers` || Timer\n"
		"granularity || `off`, `one`, `two`, `three` || `off` || The `learning`\n"
		"parameter turns the episodic memory module on or off. When `learning` is set to\n"
		"`off`, no new episodes are encoded and no commands put on the epmem link are\n"
		"processed. This is the same as using the enable and disable commands. The\n"
		"`phase` parameter determines which decision cycle phase episode encoding and\n"
		"retrieval will be performed. The `trigger` parameter controls when new episodes\n"
		"will be encoded. When it is set to `output`, new episodes will be encoded only\n"
		"if the agent made modifications to the output-link during that decision cycle.\n"
		"When set to 'dc', new episodes will be encoded every decision cycle. The\n"
		"`exclusions` parameter can be used to prevent episodic memory from encoding\n"
		"parts of working memory into new episodes. The value of `exclusions` is a list\n"
		"of string constants. During encoding, episodic memory will walk working memory\n"
		"starting from the top state identifier. If it encounters a WME whose attribute\n"
		"is a member of the `exclusions` list, episodic memory will ignore that WME and\n"
		"abort walking the children of that WME, and they will not be included in the\n"
		"encoded episode. Note that if the children of the excluded WME can be reached\n"
		"from top state via an alternative non-excluded path, they will still be\n"
		"included in the encoded episode. The `exclusions` parameter behaves differently\n"
		"from other parameters in that issuing `epmem --set exclusions ` does not set\n"
		"its value to ``. Instead, it will toggle the membership of `` in the\n"
		"`exclusions` list. The `path` parameter specifies the file system path the\n"
		"database is stored in. When `path` is set to a valid file system path and\n"
		"database mode is set to file, then the SQLite database is written to that path.\n"
		"The append parameter will determine whether all existing episodes recorded in a\n"
		"database on disk will be erased when epmem loads it. Note that this affects\n"
		"episodic memory re-initialization also, i.e. if the append setting is off, all\n"
		"episodic memories stored to disk will be lost when an init-soar is performed.\n"
		"Note that episodic memory cannot currently append to an in-memory database. If\n"
		"you perform an init-soar while using an in-memory database, all current\n"
		"episodes stored will be cleared. Note that changes to database, path and append\n"
		"will not have an effect until the database is used after an initialization.\n"
		"This happens either shortly after launch (on first use) or after a database\n"
		"initialization command is issued. To switch databases or database storage types\n"
		"after running, set your new parameters and then perform an `epmem --init`. The\n"
		"`epmem --backup` command can be used to make a copy of the current state of the\n"
		"database, whether in memory or on disk. This command will commit all\n"
		"outstanding changes before initiating the copy. When the database is stored to\n"
		"disk, the `lazy-commit` and `optimization` parameters control how often cached\n"
		"database changes are written to disk. These parameters trade off safety in the\n"
		"case of a program crash with database performance. When `optimization` is set\n"
		"to `performance`, the agent will have an exclusive lock on the database,\n"
		"meaning it cannot be opened concurrently by another SQLite process such as\n"
		"SQLiteMan. The lock can be relinquished by setting the database to memory or\n"
		"another database and issuing init-soar/`epmem --init` or by shutting down the\n"
		"Soar kernel. The `balance` parameter sets the linear weight of match\n"
		"cardinality vs. cue activation. As a performance optimization, when the value\n"
		"is 1 (default), activation is not computed. If this value is not 1 (even close,\n"
		"such as 0.99), and working memory activation is enabled, this value will be\n"
		"computed for each leaf WME, which may incur a noticeable cost, depending upon\n"
		"the overall complexity of the retrieval. The `graph-match-ordering` parameter\n"
		"sets the heuristic by which identifiers are ordered during graph match\n"
		"(assuming `graph-match` is `on`). The default, `undefined`, does not enforce\n"
		"any order and may be sufficient for small cues. For more complex cues, there\n"
		"will be a one-time sorting cost, during each retrieval, if the parameter value\n"
		"is changed. The currently available heuristics are depth-first search (`dfs`)\n"
		"and most-constrained variable (`mcv`). It is advised that you attempt these\n"
		"heuristics to improve performance if the `query_graph_match` timer reveals that\n"
		"graph matching is dominating retrieval time. The `merge` parameter controls how\n"
		"the augmentations of retrieved long-term identifiers (LTIs) interact with an\n"
		"existing LTI in working memory. If the LTI is not in working memory or has no\n"
		"augmentations in working memory, this parameter has no effect. If the\n"
		"augmentation is in working memory and has augmentations, by default (`none`),\n"
		"episodic memory will not augment the LTI. If the parameter is set to `add` then\n"
		"any augmentations that augmented the LTI in a retrieved episode are added to\n"
		"working memory. === Statistics === Episodic memory tracks statistics over the\n"
		"lifetime of the agent. These can be accessed using `epmem --stats `. Running\n"
		"`epmem --stats` without a statistic will list the values of all statistics.\n"
		"Unlike timers, statistics will always be updated. Available statistics are: ||\n"
		"*Name* || *Label* || *Description* || || `time` || Time || Current episode ID |\n"
		"| || `db-lib-version` || SQLite Version || SQLite library version || || `mem-\n"
		"usage` || Memory Usage || Current SQLite memory usage in bytes || || `mem-high`\n"
		"|| Memory Highwater || High SQLite memory usage watermark in bytes || ||\n"
		"`queries` || Queries || Number of times the *query* command has been processed\n"
		"|| || `nexts` || Nexts || Number of times the *next* command has been processed\n"
		"|| || `prevs` || Prevs || Number of times the *previous* command has been\n"
		"processed || || `ncb-wmes` || Last Retrieval WMEs || Number of WMEs added to\n"
		"working memory in last reconstruction || || `qry-pos` || Last Query Positive ||\n"
		"Number of leaf WMEs in the *query* cue of last cue-based retrieval || || `qry-\n"
		"neg` || Last Query Negative || Number of leaf WMEs in the *neg-query* cue of\n"
		"the last cue-based retrieval || || `qry-ret` || Last Query Retrieved || Episode\n"
		"ID of last retrieval || || `qry-card` || Last Query Cardinality || Match\n"
		"cardinality of last cue-based retrieval || || `qry-lits` || Last Query Literals\n"
		"|| Number of literals in the DNF graph of last cue-based retrieval || ===\n"
		"Timers === Episodic memory also has a set of internal timers that record the\n"
		"durations of certain operations. Because fine-grained timing can incur runtime\n"
		"costs, episodic memory timers are off by default. Timers of different levels of\n"
		"detail can be turned on by issuing `epmem --set timers `, where the levels can\n"
		"be `off`, `one`, `two`, or `three`, `three` being most detailed and resulting\n"
		"in all timers being turned on. Note that none of the episodic memory statistics\n"
		"nor timing information is reported by the `stats` command. All timer values are\n"
		"reported in seconds. Level one || *Timer* || *Description* || || `_total` ||\n"
		"Total epmem operations || Level two || *Timer* || *Description* || ||\n"
		"`epmem_api` || Agent command validation || || `epmem_hash` || Hashing symbols |\n"
		"| || `epmem_init` || Episodic store initialization || || `epmem_ncb_retrieval`\n"
		"|| Episode reconstruction || || `epmem_next` || Determining next episode || ||\n"
		"`epmem_prev` || Determining previous episode || || `epmem_query` || Cue-based\n"
		"query || || `epmem_storage` || Encoding new episodes || || `epmem_trigger` ||\n"
		"Deciding whether new episodes should be encoded || || `epmem_wm_phase` ||\n"
		"Converting preference assertions to working memory changes || Level three ||\n"
		"*Timer* || *Description* || | `ncb_edge` || Collecting edges during\n"
		"reconstruction || || `ncb_edge_rit` || Collecting edges from relational\n"
		"interval tree || || `ncb_node` || Collecting nodes during reconstruction || ||\n"
		"`ncb_node_rit` || Collecting nodes from relational interval tree || ||\n"
		"`query_cleanup` || Deleting dynamic data structures || || `query_dnf` ||\n"
		"Building the first level of the DNF || || `query_graph_match` || Graph match ||\n"
		"|| `query_result` || Putting the episode in working memory || ||\n"
		"`query_sql_edge` || SQL query for an edge || || `query_sql_end_ep` || SQL query\n"
		"for the end of the range of an edge || || `query_sql_end_now` || SQL query for\n"
		"the end of the now of an edge || || `query_sql_end_point` || SQL query for the\n"
		"end of the point of an edge || || `query_sql_start_ep` || SQL query for the\n"
		"start of the range of an edge || || `query_sql_start_now` || SQL query for the\n"
		"start of the now of an edge || || `query_sql_start_point` || SQL query for the\n"
		"start of the point of an edge || || `query_walk` || Walking the intervals || ||\n"
		"`query_walk_edge` || Expanding edges while walking the intervals || ||\n"
		"`query_walk_interval` || Updating satisfaction while walking the intervals || =\n"
		"== Visualization === When debugging agents using episodic memory it is often\n"
		"useful to inspect the contents of individual episodes. Running `epmem --viz `\n"
		"will output the contents of an episode in graphviz format. For more information\n"
		"on this format and visualization tools, see http://www.graphviz.org. The `epmem\n"
		"--print` option has the same syntax, but outputs text that is similar to using\n"
		"the `print` command to get the substructure of an identifier in working memory,\n"
		"which is possibly more useful for interactive debugging. == See Also ==\n"
		"[cmd_watch watch] [cmd_wma wma]\n"
	;
	docstrings["excise.wiki."] = 
		"#summary excise command documentation = excise = Delete Soar productions from\n"
		"production memory. == Synopsis == {{{ excise production_name excise options }}}\n"
		"=== Default Aliases === || `ex` || `excise` || == Options == || `-a, --all` ||\n"
		"Remove all productions from memory *and* perform an [cmd_init_soar init-soar]\n"
		"command || || `-c, --chunks` || Remove all chunks (learned productions) and\n"
		"justifications from memory || || `-d, --default` || Remove all default\n"
		"productions (`:default`) from memory || || `-r, --rl` || Excise Soar-RL rules |\n"
		"| || `-t, --task` || Remove chunks, justifications, and user productions from\n"
		"memory || || `-T, --templates` || Excise Soar-RL templates || || `-u, --user` |\n"
		"| Remove all user productions (but not chunks or default rules) from memory ||\n"
		"|| `production_name` || Remove the specific production with this name. || ==\n"
		"Description == This command removes productions from Soar's memory. The command\n"
		"must be called with either a specific production name or with a flag that\n"
		"indicates a particular group of productions to be removed. Using the flag `-a`\n"
		"or `--all` also causes an init-soar. == Examples == This command removes the\n"
		"production `my*first*production` and all chunks: {{{ excise my*first*production\n"
		"--chunks }}} This removes all productions and does an [cmd_init_soar init-\n"
		"soar]: {{{ excise --all }}} == See Also == [cmd_init_soar init-soar]\n"
	;
	docstrings["explain_backtraces.wiki."] = 
		"#summary explain-backtraces command documentation = explain-backtraces = Print\n"
		"information about chunk and justification backtraces. == Synopsis == {{ {\n"
		"explain-backtraces [options] [prod_name] }}} === Default Aliases === || `eb` ||\n"
		"`explain-backtraces` || == Options == || `prod_name` || List all conditions and\n"
		"grounds for the chunk or justification. || || `-c, --condition` || Explain why\n"
		"condition number `n` is in the chunk or justification. || || `-f, --full` ||\n"
		"Print the full backtrace for the named production || == Description == This\n"
		"command provides some interpretation of backtraces generated during chunking.\n"
		"The two most useful variants are: {{{ explain-backtraces prodname explain-\n"
		"backtraces -c n prodname }}} The first variant prints a numbered list of all\n"
		"the conditions for the named chunk or justification, and the _ground_ which\n"
		"resulted in inclusion in the chunk/justification. A _ground_ is a working\n"
		"memory element (WME) which was tested in the supergoal. Just knowing which WME\n"
		"was tested may be enough to explain why the chunk/justification exists. If not,\n"
		"the second variant, where `n` is the condition of interest, can be used to\n"
		"obtain a list of the productions which fired to obtain this condition in the\n"
		"chunk/justification (and the crucial WMEs tested along the way).\n"
		"[cmd_save_backtraces save-backtraces] mode must be on when a chunk or\n"
		"justification is created or no explanation will be available. Calling explain-\n"
		"backtraces with no argument prints a list of all chunks and justifications for\n"
		"which backtracing information is available. Use with no arguments to list all\n"
		"productions that can be \"explained.\" == Examples == Examining the chunk `chunk-\n"
		"65*d13*tie*2` generated in a water-jug task: {{{ soar> explain-backtraces\n"
		"chunk-65*d13*tie*2 (sp chunk-65*d13*tie*2 (state ^name water-jug ^jug ^jug )\n"
		"(state ^name water-jug ^desired ^operator + ^jug ^jug ) ( ^desired ) ( ^name\n"
		"pour ^into ^jug ) ( ^volume 3 ^contents 0) ( ^problem-space ) ( ^name\n"
		"water-jug) ( ^volume 3 ^contents 3) ( ^volume 5 ^contents 0) ( ^volume 5 ^\n"
		"contents 3) --> ( ^operator -)) 1 : (state ^name water-jug) Ground : (S3 ^name\n"
		"water-jug) 2 : (state ^name water-jug) Ground : (S5 ^name water-jug) 3 : ( ^\n"
		"desired ) Ground : (S5 ^desired D1) 4 : ( ^desired ) Ground : (S3 ^desired D1)\n"
		"5 : ( ^operator +) Ground : (S5 ^operator O18 +) 6 : ( ^name pour) Ground :\n"
		"(O18 ^name pour) 7 : ( ^into ) Ground : (O18 ^into N3) 8 : ( ^volume 3) Ground\n"
		": (N3 ^volume 3) 9 : ( ^contents 0) Ground : (N3 ^contents 0) 10 : ( ^jug )\n"
		"Ground : (S5 ^jug N3) 11 : ( ^problem-space ) Ground : (S5 ^problem- space P3)\n"
		"12 : ( ^name water-jug) Ground : (P3 ^name water-jug) 13 : ( ^jug ) Ground :\n"
		"(S3 ^jug N1) 14 : ( ^volume 3) Ground : (N1 ^volume 3) 15 : ( ^contents 3)\n"
		"Ground : (N1 ^contents 3) 16 : ( ^jug ) Ground : (S3 ^jug N2) 17 : ( ^volume 5)\n"
		"Ground : (N2 ^volume 5) 18 : ( ^contents 0) Ground : (N2 ^contents 0) 19 : ( ^\n"
		"jug ) Ground : (S5 ^jug N4) 20 : ( ^volume 5) Ground : (N4 ^volume 5) 21 : ( ^\n"
		"contents 3) Ground : (N4 ^contents 3) 22 : ( ^jug ) Ground : (O18 ^jug N4) }}}\n"
		"Further examining condition 21: {{{ soar> explain-backtraces -c 21\n"
		"chunk-65*d13*tie*2 Explanation of why condition (N4 ^contents 3) was included\n"
		"in chunk-65*d13*tie*2 Production chunk-64*d13*opnochange*1 matched (N4 ^\n"
		"contents 3) which caused production selection*select*failure-evaluation-\n"
		"becomes-reject-preference to match (E3 ^symbolic-value failure) which caused A\n"
		"result to be generated. }}} == See Also == [cmd_save_backtraces save-\n"
		"backtraces]\n"
	;
	docstrings["firing_counts.wiki."] = 
		"#summary firing-counts command documentation = firing-counts = Print the number\n"
		"of times each production has fired. == Synopsis == {{{ firing-counts [n]\n"
		"firing-counts production_name }}} === Default Aliases === || `fc` || `firing-\n"
		"counts` || == Options == If given, an option can take one of two forms -- an\n"
		"integer or a production name: || `n` || List the top `n` productions. If `n` is\n"
		"0, only the productions which haven't fired are listed || || `production_name `\n"
		"|| Print how many times the production has fired || == Description == The\n"
		"firing-counts command prints the number of times each production has fired;\n"
		"production names are given from most requently fired to least frequently fired.\n"
		"With no arguments, it lists all productions. If an integer argument, `n`, is\n"
		"given, only the top `n` productions are listed. If `n` is zero (0), only the\n"
		"productions that haven't fired at all are listed. If a production name is given\n"
		"as an argument, the firing count for that production is printed. Note that\n"
		"firing counts are reset by a call to [cmd_init_soar init-soar]. == Examples ==\n"
		"This example prints the 10 productions which have fired the most times along\n"
		"with their firing counts: {{{ firing-counts 10 }}} This example prints the\n"
		"firing counts of production `my*first*production`: {{{ firing-counts\n"
		"my*first*production }}} == Warnings == Firing-counts are reset to zero after an\n"
		"[cmd_init_soar init-soar]. NB: This command is slow, because the sorting takes\n"
		"time `O(n*log n)` == See Also == [cmd_init_soar init-soar]\n"
	;
	docstrings["gds_print.wiki."] = 
		"#summary gds-print command documentation = gds-print = Print the WMEs in the\n"
		"goal dependency set for each goal. == Synopsis == {{{ gds-print }}} === Default\n"
		"Aliases === || `gds_print` || `gds-print` || == Description == The Goal\n"
		"Dependency Set (GDS) is described in an appendix of the Soar manual. This\n"
		"command is a debugging command for examining the GDS for each goal in the\n"
		"stack. First it steps through all the working memory elements in the rete,\n"
		"looking for any that are included in _any_ goal dependency set, and prints each\n"
		"one. Then it also lists each goal in the stack and prints the wmes in the goal\n"
		"dependency set for that particular goal. This command is useful when trying to\n"
		"determine why subgoals are disappearing unexpectedly: often something has\n"
		"changed in the goal dependency set, causing a subgoal to be regenerated prior\n"
		"to producing a result. == Warnings == gds-print is horribly inefficient and\n"
		"should not generally be used except when something is going wrong and you need\n"
		"to examine the Goal Dependency Set.\n"
	;
	docstrings["gp.wiki."] = 
		"#summary gp command documentation = gp = Generate productions according to a\n"
		"specified pattern. == Synopsis == {{{ gp { production_body } }}} == Description\n"
		"== The gp command defines a pattern used to generate and source a set of Soar\n"
		"productions. `production_body` is a single argument that looks almost identical\n"
		"to a standard Soar rule that would be used with the [cmd_sp sp] command.\n"
		"Indeed, any syntax that is allowed in [cmd_sp sp] is also allowed in gp.\n"
		"Patterns in gp are specified with sets of whitespace-seprated values in square\n"
		"brackets. Every combination of values across all square-bracketed value lists\n"
		"will be generated. Values with whitespaces can be used if wrapped in pipes.\n"
		"Characters can also be escaped with a backslash (so string literals with\n"
		"embedded pipes and spaces outside of string literals are both possible). gp is\n"
		"primarily intended as an alternative to :template rules for reinforcement\n"
		"learning. :template rules generate new rules as patterns occur at run time.\n"
		"Unfortunately, this incurs a high run time cost. If all possible values are\n"
		"known in advance, then the rules can be generated using gp at source time, thus\n"
		"allowing code to run faster. gp is not appropriate when all possible values are\n"
		"not known or if the total number of possible rules is very large (and the\n"
		"system is likely to encounter only a small subset at run time). It is also\n"
		"possible to combine gp and :template (e.g., if some of the values are known and\n"
		"not others). This should reduce the run time cost of :template. There is\n"
		"nothing that actually restricts gp to being used for RL, although for non-RL\n"
		"rules, a disjunction list (using `<<` and `>>`) is better where it can be used.\n"
		"More esoteric uses may include multiple bracketed value lists inside a\n"
		"disjunction list, or even variables in bracketed value lists. Each rule\n"
		"generated by gp has `*integer` appended to its name (where `integer` is some\n"
		"incrementing number). == Examples == Template version of rule: {{{ sp {water-\n"
		"jug*fill :template (state ^name water-jug ^operator + ^jug ) ( ^name fill ^\n"
		"fill-jug.volume ) ( ^volume 3 ^contents ) ( ^volume 5 ^contents ) --> ( ^\n"
		"operator = 0) } }}} `gp` version of rule (generates 144 rules): {{{ gp\n"
		"{water-jug*fill (state ^name water-jug ^operator + ^jug ) ( ^name fill ^\n"
		"fill-jug.volume [3 5]) ( ^volume 3 ^contents [0 1 2 3]) ( ^volume 5 ^contents\n"
		"[0 1 2 3 4 5]) --> ( ^operator = 0) } }}} Esoteric example (generates 24\n"
		"rules): {{{ gp {strange-example (state ^<< [att1 att2] [att3 att4] >> [ val |\n"
		"another val| |strange val\\|| ]) --> ( ^foo [bar ]) } }}} [http://\n"
		"code.google.com/p/soar/source/browse/trunk/SoarSuite/Core/Tests/Agents/\n"
		"testgp.soar testgp.soar] contains many more examples. == See Also == [cmd_sp\n"
		"sp]\n"
	;
	docstrings["gp_max.wiki."] = 
		"#summary gp-max command documentation = gp-max = Set the upper-limit to the\n"
		"number of productions generated by the gp command. == Synopsis == {{{ gp-max\n"
		"[value] }}} == Options == || value || Maximum number of productions to produce\n"
		"|| == Description == gp-max is used to limit the number of productions produced\n"
		"by a gp production. It is easy to write a gp production that has a\n"
		"combinatorial explosion and hangs for a long time while those productions are\n"
		"added to memory. The gp-max command bounds this. Use without an argument to\n"
		"query the current value. == Examples == {{{ gp-max 1000 }}} gp productions that\n"
		"produce more than 1000 productions will stop producing them when 1000 are made\n"
		"and return an error. == See Also == [cmd_sp sp] [cmd_gp gp]\n"
	;
	docstrings["help.wiki."] = 
		"#summary help command documentation = help = Provide formatted usage\n"
		"information about Soar commands. == Synopsis == {{{ help [command_name] }}} ===\n"
		"Default Aliases === || `?` || `help` || || `h` || `help` || || `man` || `help`\n"
		"|| == Description == This command prints formatted help for the given command\n"
		"name. Issue alone to see what topics have help available.\n"
	;
	docstrings["indifferent_selection.wiki."] = 
		"#summary indifferent-selection command documentation = indifferent-selection =\n"
		"Controls indifferent preference arbitration. == Synopsis == {{{ indifferent-\n"
		"selection indifferent-selection [-s] indifferent-selection [-bgfxl]\n"
		"indifferent-selection [-et] [value] indifferent-selection [-p] parameter\n"
		"[reduction_policy] indifferent-selection [-r] parameter reduction_policy\n"
		"[reduction_rate] indifferent-selection [-a] [setting] }}} === Default Aliases =\n"
		"== || *Alias* || *Equivalent Command* || || `inds` || `indifferent-selection` |\n"
		"| == Options == ||*Option*||*Description*|| || `-s, --stats` || Summary of\n"
		"settings || || `policy` || Set exploration policy || || `parameter [exploration\n"
		"policy parameters]`|| Get/Set exploration policy parameters (if value not\n"
		"given, returns the current value) || || `parameter [reduction_policy](value]`||\n"
		"Get/Set exploration policy parameter reduction policy (if policy not given,\n"
		"returns the current) || || `parameter reduction_policy [exploration policy\n"
		"parameter]`|| Get/Set exploration policy parameter reduction rate for a policy\n"
		"(if rate not give, returns the current)|| || `-a, --auto-reduce [on,off]\n"
		"(reduction-rate]`|| Get/Set auto-reduction setting (if setting not provided,\n"
		"returns the current) || == Description == The indifferent-selection command\n"
		"allows the user to set options relating to selection between operator proposals\n"
		"that are mutually indifferent in preference memory. The primary option is the\n"
		"exploration policy (each is covered below). When Soar starts, _softmax_ is the\n"
		"default policy. *Note*: As of version 9.3.2, the architecture no longer\n"
		"automatically changes the policy to _epsilon-greedy_ the first time Soar-RL is\n"
		"enabled. Some policies have parameters to temper behavior. The indifferent-\n"
		"selection command provides basic facilities to automatically reduce these\n"
		"parameters exponentially and linearly each decision cycle by a fixed rate. In\n"
		"addition to setting these policies/rates, the _auto-reduce_ option enables the\n"
		"automatic reduction system (disabled by default), for which the Soar decision\n"
		"cycle incurs a small performance cost. == Exploration Policies == ||*Option*||\n"
		"*Description*|| || `-b, --boltzmann` || Tempered softmax (uses temperature) ||\n"
		"|| `-g, --epsilon-greedy` || Tempered greedy (uses epsilon) || || `-x,\n"
		"--softmax` || Random, biased by numeric indifferent values (if a non- positive\n"
		"value is encountered, resorts to a uniform random selection) || || `- f,\n"
		"--first` || Deterministic, first indifferent preference is selected || || `- l,\n"
		"--last` || Deterministic, last indifferent preference is selected || ==\n"
		"Exploration Policy Parameters == || *Parameter Name* || *Acceptable Values* ||\n"
		"*Default Value* || || `-e, --epsilon` || `[0, 1]` || `0.1` || || `-t, --\n"
		"temperature` || `(0, inf)` || `25` || == Exploration Policy Parameter Auto-\n"
		"Reduction Policies == ||*Parameter Name*||*Acceptable Values*||*Default Value*|\n"
		"| || `exponential default` || `[0, 1]` || `1` || || `linear` || `[0, inf]` ||\n"
		"`0` || == See Also == [cmd_numeric_indifferent_mode numeric- indifferent-mode]\n"
		"[cmd_rl rl]\n"
	;
	docstrings["init_soar.wiki."] = 
		"#summary init-soar command documentation = init-soar = Empties working memory\n"
		"and resets run-time statistics. == Synopsis == {{{ init-soar }}} === Default\n"
		"Aliases === || `init` || `init-soar` || || `is` || `init-soar` || ==\n"
		"Description == The init-soar command initializes Soar. It removes all elements\n"
		"from working memory, wiping out the goal stack, and resets all runtime\n"
		"statistics. The firing counts for all productions are reset to zero. The init-\n"
		"soar command allows a Soar program that has been halted to be reset and start\n"
		"its execution from the beginning. init-soar does not remove any productions\n"
		"from production memory; to do this, use the [cmd_excise excise] command. Note\n"
		"however, that all justifications will be removed because they will no longer be\n"
		"supported. == See Also == [cmd_excise excise]\n"
	;
	docstrings["internal_symbols.wiki."] = 
		"#summary internal-symbols command documentation = internal-symbols = Print\n"
		"information about the Soar symbol table. == Synopsis == {{{ internal-symbols\n"
		"}}} == Description == The internal-symbols command prints information about the\n"
		"Soar symbol table. Such information is typically only useful for users\n"
		"attempting to debug Soar by locating memory leaks or examining I/O structure. =\n"
		"= Example == {{{ soar> internal-symbols --- Symbolic Constants: --- operator\n"
		"accept evaluate-object problem-space sqrt interrupt mod goal io (...additional\n"
		"symbols deleted for brevity...) --- Integer Constants: --- --- Floating-Point\n"
		"Constants: --- --- Identifiers: --- --- Variables: --- }}}\n"
	;
	docstrings["learn.wiki."] = 
		"#summary learn command documentation = learn = Set the parameters for chunking.\n"
		"== Synopsis == {{{ learn [-l] learn [-d|E|o] learn [-eabnNpP] }}} === Default\n"
		"Aliases === || `l` || `learn` || == Options == || `-e, --enable, --on` || Turn\n"
		"chunking on. Can be modified by `-a` or `-b`. || || `-d, --disable, --off` ||\n"
		"Turn all chunking off. (default) || || `-E, --except` || Learning is on, except\n"
		"as specified by RHS `dont-learn` actions. || || `-o, --only` || Chunking is on\n"
		"only as specified by RHS `force-learn` actions. || || `-l, --list` || Prints\n"
		"listings of `dont-learn` and `force-learn` states. || || `-a, --all-levels` ||\n"
		"Build chunks whenever a subgoal returns a result. Learning must be enabled. ||\n"
		"|| `-b, --bottom-up` || Build chunks only for subgoals that have not yet had\n"
		"any subgoals with chunks built. Learning must be enabled. || || `-n, --local-\n"
		"negations` || Build chunks when local negation encountered in backtraces.\n"
		"(default) || || `-N, --no-local-negations` || Do not build chunks when local\n"
		"negation encountered in backtraces. || || `-p, --desirability-prefs` || Add\n"
		"relevant desirability preferences to backtraces. || || `-P, --no-desirability-\n"
		"prefs` || Do not add any desirability preferences to backtraces. (default)|| ==\n"
		"Description == The learn command controls the parameters for chunking. With no\n"
		"arguments, this command prints out the current learning environment status. If\n"
		"arguments are provided, they will alter the learning environment as described\n"
		"in the options and arguments table. The [cmd_watch watch] command can be used\n"
		"to provide various levels of detail when productions are learned. Learning is\n"
		"_disabled_ by default. With the `--on` flag, chunking is on all the time. With\n"
		"the `--except` flag, chunking is on, but Soar will not create chunks for states\n"
		"that have had RHS `dont-learn` actions executed in them. With the `--only`\n"
		"flag, chunking is off, but Soar will create chunks for only those states that\n"
		"have had RHS `force-learn` actions executed in them. With the `--off` flag,\n"
		"chunking is off all the time. The `--only` flag and its companion `force-learn`\n"
		"RHS action allow Soar developers to turn learning on in a particular problem\n"
		"space, so that they can focus on debugging the learning problems in that\n"
		"particular problem space without having to address the problems elsewhere in\n"
		"their programs at the same time. Similarly, the `--except` flag and its\n"
		"companion `dont-learn` RHS action allow developers to temporarily turn learning\n"
		"off for debugging purposes. These facilities are provided as debugging tools,\n"
		"and do not correspond to any theory of learning in Soar. The following final\n"
		"six settings are orthogonal to the `--on`, `--except`, `--only`, and `--off`\n"
		"flags, and so, may be used in combination with them. The `--all-levels` and `--\n"
		"bottom-up` control when chunks are formed when there are multiple levels of\n"
		"subgoals. With bottom-up learning, chunks are learned only in states in which\n"
		"no subgoal has yet generated a chunk. In this mode, chunks are learned only for\n"
		"the \"bottom\" of the subgoal hierarchy and not the intermediate levels. With\n"
		"experience, the subgoals at the bottom will be replaced by the chunks, allowing\n"
		"higher level subgoals to be chunked. The options `--local-negations` and `--no-\n"
		"local-negations` control whether or not chunks can be created that are derived\n"
		"from rules that check for negated WMEs on the substate (local negations).\n"
		"Chunking through local negations can result in overgeneral chunks, but\n"
		"disabling this ability will reduce the number of chunks formed. The default is\n"
		"to enable chunking through local negations. If chunking through local negations\n"
		"is disabled, to see when chunks are discarded (and why), set `watch --learning\n"
		"print` (see [cmd_watch watch] command). The options `--desirability-prefs` and\n"
		"`--no-desirability-prefs` control whether or not desirability preferences are\n"
		"added to the context dependent preference set, which is the set of operator\n"
		"evaluation preferences that led to the selection of an operator in a subgoal.\n"
		"All preferences in the CDPS are backtraced through when creating justifications\n"
		"and chunks. When this option is disabled, only requirement preferences\n"
		"(requires and prohibits) will be added to the CDPS. When this option is\n"
		"enabled, relevant desirability prefs (better, best, worse, worst, indifferent)\n"
		"will also be added, producing more specific and possibly correct chunks. The\n"
		"default is to not include desirability preferences. Learning can be turned on\n"
		"or off at any point during a run. == Examples == To enable learning only at the\n"
		"lowest subgoal level: {{{ learn -e b }}} To see all the `force-learn` and\n"
		"`dont-learn` states registered by RHS actions {{{ learn -l }}} == See Also ==\n"
		"[cmd_watch watch] [cmd_explain_backtraces explain-backtraces]\n"
		"[cmd_save_backtraces save-backtraces]\n"
	;
	docstrings["load_library.wiki."] = 
		"#summary load-library command documentation = load-library = Load a shared\n"
		"library into the local client (for the purpose of, e.g., providing custom event\n"
		"handling). == Synopsis == {{{ load-library [library_name] [arguments] }}} ==\n"
		"Options == || library_name || The root name of the library (without the .dll or\n"
		".so extension; this is added for you depending on your platform). || ||\n"
		"arguments || Whatever arguments the library's initialization function is\n"
		"expecting, if any. || == Description == Sometimes, a user will want to extend\n"
		"an existing environment. For example, the person may want to provide custom RHS\n"
		"functions, or register for print events for the purpose of logging trace\n"
		"information. If modifying the existing environment is cumbersome or impossible,\n"
		"then the user has two options: create a remote client that provides the\n"
		"functionality, or use load-library. Load-library creates extensions in the\n"
		"local client, making it orders of magnitude faster than a remote client. To\n"
		"create a loadable library, the library must contain the following function: {{\n"
		"{ #ifdef __cplusplus extern \"C\" { #endif EXPORT char* sml_InitLibrary(Kernel*\n"
		"pKernel, int argc, char** argv) { // Your code here } #ifdef __cplusplus } / /\n"
		"extern \"C\" #endif }}} This function is called when load-library loads your\n"
		"library. It is responsible for any initialization that you want to take place\n"
		"(e.g. registering custom RHS functions, registering for events, etc). The argc\n"
		"and argv arguments are intended to mirror the arguments that a standard SML\n"
		"client would get. Thus, the first argument is the name of the library, and the\n"
		"rest are whatever other arguments are provided. This is to make it easy to use\n"
		"the same codebase to create a loadable library or a standard remote SML client\n"
		"(e.g. when run as a standard client, just pass the arguments main gets into\n"
		"`sml_InitLibrary`). The return value of `sml_InitLibrary` is for any error\n"
		"messages you want to return to the load-library call. If no error occurs,\n"
		"return a zero-length string. An example library is provided in the `Tools/\n"
		"TestExternalLibraryLib` project. This example can also be compiled as a\n"
		"standard remote SML client. The `Tools/TestExternalLibraryExe` project tests\n"
		"loading the `TestExternalLibraryLib` library. == Examples == To load\n"
		"`TestExternalLibraryLib`: {{{ load-library TestExternalLibraryLib }}} To load a\n"
		"library that takes arguments (say, a logger): {{{ load-library my-logger -\n"
		"filename mylog.log }}}\n"
	;
	docstrings["ls.wiki."] = 
		"#summary ls command documentation = ls = List the contents of the current\n"
		"working directory. == Synopsis == {{{ ls }}} === Default Aliases === || `dir` |\n"
		"| `ls` || == Description == List the contents of the working directory. == See\n"
		"Also == [cmd_cd cd] [cmd_dirs dirs] [cmd_pushd pushd] [cmd_popd popd]\n"
		"[cmd_source source] [cmd_pwd pwd]\n"
	;
	docstrings["matches.wiki."] = 
		"#summary matches command documentation = matches = Prints information about\n"
		"partial matches and the match set. == Synopsis == {{{ matches [options]\n"
		"production_name matches [options] -[a|r] }}} == Options == || `production_name`\n"
		"|| Print partial match information for the named production. || || `-n, --\n"
		"names, -c, --count` || For the match set, print only the names of the\n"
		"productions that are about to fire or retract (the default). If printing\n"
		"partial matches for a production, just list the partial match counts. || || `-\n"
		"t, --timetags` || Also print the timetags of the wmes at the first failing\n"
		"condition || || `-w, --wmes` || Also print the full wmes, not just the\n"
		"timetags, at the first failing condition. || || `-a, --assertions` || List only\n"
		"productions about to fire. || || `-r, --retractions` || List only productions\n"
		"about to retract. || == Description == The matches command prints a list of\n"
		"productions that have instantiations in the match set, i.e., those productions\n"
		"that will retract or fire in the next Propose or Apply phase. It also will\n"
		"print partial match information for a single, named production. === Printing\n"
		"the match set === When printing the match set (i.e., no production name is\n"
		"specified), the default action prints only the names of the productions which\n"
		"are about to fire or retract. If there are multiple instantiations of a\n"
		"production, the total number of instantiations of that production is printed\n"
		"after the production name, unless `--timetags` or `--wmes` are specified, in\n"
		"which case each instantiation is printed on a separate line. When printing the\n"
		"match set, the `--assertions` and `--retractions` arguments may be specified to\n"
		"restrict the output to print only the assertions or retractions. === Printing\n"
		"partial matches for productions === In addition to printing the current match\n"
		"set, the matches command can be used to print information about partial matches\n"
		"for a named production. In this case, the conditions of the production are\n"
		"listed, each preceded by the number of currently active matches for that\n"
		"condition. If a condition is negated, it is preceded by a minus sign `-`. The\n"
		"pointer `>>>>` before a condition indicates that this is the first condition\n"
		"that failed to match. When printing partial matches, the default action is to\n"
		"print only the counts of the number of WME's that match, and is a handy tool\n"
		"for determining which condition failed to match for a production that you\n"
		"thought should have fired. At levels `--timetags` and `--wmes` the matches\n"
		"command displays the WME's immediately after the first condition that failed to\n"
		"match--temporarily interrupting the printing of the production conditions\n"
		"themselves. === Notes === When printing partial match information, some of the\n"
		"matches displayed by this command may have already fired, depending on when in\n"
		"the execution cycle this command is called. To check for the matches that are\n"
		"about to fire, use the matches command without a named production. In Soar 8,\n"
		"the execution cycle (decision cycle) is input, propose, decide, apply output;\n"
		"it no longer stops for user input after the decision phase when [cmd_run\n"
		"running] by decision cycles (`run -d 1`). If a user wishes to print the match\n"
		"set immediately after the decision phase and before the apply phase, then the\n"
		"user must run Soar by _phases_ (`run -p 1`). == Examples == This example prints\n"
		"the productions which are about to fire and the wmes that match the productions\n"
		"on their left-hand sides: {{{ matches --assertions --wmes }}} This example\n"
		"prints the wme timetags for a single production. {{{ matches - t\n"
		"my*first*production }}}\n"
	;
	docstrings["max_chunks.wiki."] = 
		"#summary max-chunks command documentation = max-chunks = Limit the number of\n"
		"chunks created during a decision cycle. == Synopsis == {{{ max-chunks [n] }}} =\n"
		"= Options == || `n` || Maximum number of chunks allowed during a decision\n"
		"cycle. || == Description == The max-chunks command is used to limit the maximum\n"
		"number of chunks that may be created during a decision cycle. The initial value\n"
		"of this variable is 50; allowable settings are any integer greater than 0. The\n"
		"chunking process will end after max-chunks chunks have been created, _even if\n"
		"there are more results that have not been backtraced through to create chunks_,\n"
		"and Soar will proceed to the next phase. A warning message is printed to notify\n"
		"the user that the limit has been reached. This limit is included in Soar to\n"
		"prevent getting stuck in an infinite loop during the chunking process. This\n"
		"could conceivably happen because newly-built chunks may match immediately and\n"
		"are fired immediately when this happens; this can in turn lead to additional\n"
		"chunks being formed, etc. If you see this warning, something is seriously\n"
		"wrong; Soar is unable to guarantee consistency of its internal structures. You\n"
		"should not continue execution of the Soar program in this situation; stop and\n"
		"determine whether your program needs to build more chunks or whether you've\n"
		"discovered a bug (in your program or in Soar itself).\n"
	;
	docstrings["max_dc_time.wiki."] = 
		"#summary max-dc-time command documentation = max-dc-time = Set a wall-clock\n"
		"time limit such that the agent will be interrupted when a single decision cycle\n"
		"exceeds this limit. == Synopsis == {{{ max-dc-time [--seconds] [n] max-dc-time\n"
		"-d }}} == Options == || `n` || Maximum decision cycle time in *microseconds* ||\n"
		"|| `-d`, `--disable` || Disable this interrupt. || || `-s`, `--seconds` ||\n"
		"Interpret n as seconds (floating point OK) || == Description == After output\n"
		"phase, the elapsed decision cycle time is checked to see if it is greater than\n"
		"the old maximum, and the maximum dc time stat is updated (see [cmd_stats\n"
		"stats]). At this time, this threshold is also checked. If met or exceeded, Soar\n"
		"stops at the end of the current output phase with an interrupted state. ==\n"
		"Examples == {{{ max-dc-time -s 0.05 max-dc-time 4000 }}}\n"
	;
	docstrings["max_elaborations.wiki."] = 
		"#summary max-elaborations command documentation = max-elaborations = Limit the\n"
		"maximum number of elaboration cycles in a given phase. Print a warning message\n"
		"if the limit is reached during a run. == Synopsis == {{{ max-elaborations [n]\n"
		"}}} == Options == || `n` || Maximum allowed elaboration cycles, must be a\n"
		"positive integer. || == Description == This command sets and prints the maximum\n"
		"number of elaboration cycles allowed. If `n` is given, it must be a positive\n"
		"integer and is used to reset the number of allowed elaboration cycles. The\n"
		"default value is 100. max-elaborations with no arguments prints the current\n"
		"value. max-elaborations controls the maximum number of elaborations allowed in\n"
		"a single decision cycle. The elaboration phase will end after max-elaboration\n"
		"cycles have completed, even if there are more productions eligible to fire or\n"
		"retract; and Soar will proceed to the next phase after a warning message is\n"
		"printed to notify the user. This limits the total number of cycles of parallel\n"
		"production firing but does not limit the total number of productions that can\n"
		"fire during elaboration. This limit is included in Soar to prevent getting\n"
		"stuck in infinite loops (such as a production that repeatedly fires in one\n"
		"elaboration cycle and retracts in the next); if you see the warning message, it\n"
		"may be a signal that you have a bug your code. However some Soar programs are\n"
		"designed to require a large number of elaboration cycles, so rather than a bug,\n"
		"you may need to increase the value of max-elaborations. max-elaborations is\n"
		"checked during both the Propose Phase and the Apply Phase. If Soar runs more\n"
		"than the max-elaborations limit in either of these phases, Soar proceeds to the\n"
		"next phase (either Decision or Output) even if quiescence has not been reached.\n"
		"== Examples == The command issued with no arguments, returns the max\n"
		"elaborations allowed: {{{ max-elaborations }}} to set the maximum number of\n"
		"elaborations in one phase to 50: {{{ max-elaborations 50 }}}\n"
	;
	docstrings["max_goal_depth.wiki."] = 
		"#summary max-goal-depth command documentation = max-goal-depth = Limit the sub-\n"
		"state stack depth. == Synopsis == {{{ max-goal-depth [n] }}} == Options == ||\n"
		"`n` || Maximum depth of sub-states allowed. || == Description == The max-goal-\n"
		"depth command is used to limit the maximum depth of sub-states. The initial\n"
		"value of this variable is 100; allowable settings are any integer greater than\n"
		"0. This limit is included in Soar to prevent getting stuck in an infinite\n"
		"recursive loop, which may come about due to deliberate actions or via an agent\n"
		"bug, such as dropping inadvertently to state-no-change impasses.\n"
	;
	docstrings["max_memory_usage.wiki."] = 
		"#summary max-memory-usage command documentation = max-memory-usage = Get the\n"
		"number of bytes that when exceeded by an agent, will trigger the memory usage\n"
		"exceeded event. == Synopsis == {{{ max-memory-usage [n] }}} == Options == || `n\n"
		"` || Size of limit in bytes. || == Description == The max-memory-usage command\n"
		"is used to trigger the memory usage exceeded event. The initial value of this\n"
		"is 100MB (100,000,000); allowable settings are any integer greater than 0. The\n"
		"code supporting this event is not enabled by default because the test can be\n"
		"computationally expensive and is needed only for specific embedded\n"
		"applications. Users may enable the test and event generation by uncommenting\n"
		"code in `mem.cpp`. Using the command with no arguments displays the current\n"
		"limit.\n"
	;
	docstrings["max_nil_output_cycles.wiki."] = 
		"#summary max-nil-output-cycles command documentation = max-nil-output-cycles =\n"
		"Limit the maximum number of decision cycles that are executed without producing\n"
		"output when run is invoked with run-til-output args. == Synopsis == {{{ max-\n"
		"nil-output-cycles [n] }}} == Options == || `n` || Maximum number of consecutive\n"
		"output cycles allowed without producing output. Must be a positive integer. ||\n"
		"== Description == This command sets and prints the maximum number of nil output\n"
		"cycles (output cycles that put nothing on the output link) allowed when\n"
		"[cmd_run running] using run-til-output (`run --output`). If `n` is not given,\n"
		"this command prints the current number of nil-output-cycles allowed. If `n` is\n"
		"given, it must be a positive integer and is used to reset the maximum number of\n"
		"allowed nil output cycles. max-nil-output-cycles controls the maximum number of\n"
		"output cycles that generate no output allowed when a `run --out` command is\n"
		"issued. After this limit has been reached, Soar stops. The default initial\n"
		"setting of `n` is 15. == Examples == The command issued with no arguments,\n"
		"returns the max empty output cycles allowed: {{{ max-nil-output-cycles }}} to\n"
		"set the maximum number of empty output cycles in one phase to 25: {{{ max-nil-\n"
		"output-cycles 25 }}} == See Also == [cmd_run run]\n"
	;
	docstrings["memories.wiki."] = 
		"#summary memories command documentation = memories = Print memory usage for\n"
		"partial matches. == Synopsis == {{{ memories [options] [number] memories\n"
		"production_name }}} == Options == || `-c, --chunks` || Print memory usage of\n"
		"chunks. || || `-d, --default` || Print memory usage of default productions. ||\n"
		"|| `-j, --justifications` || Print memory usage of justifications. || || `-u, -\n"
		"-user` || Print memory usage of user-defined productions. || ||\n"
		"`production_name` || Print memory usage for a specific production. || ||\n"
		"`number` || Number of productions to print, sorted by those that use the most\n"
		"memory. || || `-T, --template` || Print memory usage of Soar-RL templates. || =\n"
		"= Description == The memories command prints out the internal memory usage for\n"
		"full and partial matches of production instantiations, with the productions\n"
		"using the most memory printed first. With no arguments, the memories command\n"
		"prints memory usage for all productions. If a `production_name` is specified,\n"
		"memory usage will be printed only for that production. If a positive integer\n"
		"`number` is given, only `number` productions will be printed: the `number`\n"
		"productions that use the most memory. Output may be restricted to print memory\n"
		"usage for particular types of productions using the command options. Memory\n"
		"usage is recorded according to the tokens that are allocated in the rete\n"
		"network for the given production(s). This number is a function of the number of\n"
		"elements in working memory that match each production. Therefore, this command\n"
		"will not provide useful information at the beginning of a Soar run (when\n"
		"working memory is empty) and should be called in the middle (or at the end) of\n"
		"a Soar run. The memories command is used to find the productions that are using\n"
		"the most memory and, therefore, may be taking the longest time to match (this\n"
		"is only a heuristic). By identifying these productions, you may be able to\n"
		"rewrite your program so that it will run more quickly. Note that memory usage\n"
		"is just a heuristic measure of the match time: A production might not use much\n"
		"memory relative to others but may still be time-consuming to match, and\n"
		"excising a production that uses a large number of tokens may not speed up your\n"
		"program, because the Rete matcher shares common structure among different\n"
		"productions. As a rule of thumb, numbers less than 100 mean that the production\n"
		"is using a small amount of memory, numbers above 1000 mean that the production\n"
		"is using a large amount of memory, and numbers above 10,000 mean that the\n"
		"production is using a *very* large amount of memory. == See Also ==\n"
		"[cmd_matches matches]\n"
	;
	docstrings["multi_attributes.wiki."] = 
		"#summary multi-attributes command documentation = multi-attributes = Declare a\n"
		"symbol to be multi-attributed. == Synopsis == {{{ multi-attributes [symbol [n]]\n"
		"}}} == Options == || `symbol` || Any Soar attribute. || || `n` || Integer\n"
		"greater than 1, estimate of degree of simultaneous values for attribute. || ==\n"
		"Description == This command declares the given symbol to be an attribute which\n"
		"can take on multiple values. The optional `n` is an integer (greater than 1)\n"
		"indicating an upper limit on the number of expected values that will appear for\n"
		"an attribute. If `n` is not specified, the value 10 is used for each declared\n"
		"multi-attribute. More informed values will tend to result in greater\n"
		"efficiency. This command is used only to provide hints to the production\n"
		"condition reorderer so it can produce better condition orderings. Better\n"
		"orderings enable the rete network to run faster. This command has no effect on\n"
		"the actual contents of working memory and most users needn't use this at all.\n"
		"Note that multi-attributes declarations must be made before productions are\n"
		"loaded into soar or this command will have no effect. == Examples == Declare\n"
		"the symbol \"thing\" to be an attribute likely to take more than 1 but no more\n"
		"than 4 values: {{{ multi-attributes thing 4 }}}\n"
	;
	docstrings["numeric_indifferent_mode.wiki."] = 
		"#summary numeric-indifferent-mode command documentation = numeric-indifferent-\n"
		"mode = Select method for combining numeric preferences. == Synopsis == {{ {\n"
		"numeric-indifferent-mode [-as] }}} == Options == || `-a, --avg, --average` ||\n"
		"Use average mode || || `-s, --sum` || Use sum mode (default) || == Description\n"
		"== The numeric-indifferent-mode command sets how multiple numeric indifferent\n"
		"preference values given to an operator are combined into a single value for use\n"
		"in random selection. The default procedure is `--sum` which sums all numeric\n"
		"indifferent preference values given to the operator, defaulting to 0 if none\n"
		"exist. The alternative `--avg` mode will average the values, also defaulting to\n"
		"0 if none exist. == See Also == [cmd_rl rl] [cmd_indifferent_selection\n"
		"indifferent-selection]\n"
	;
	docstrings["o_support_mode.wiki."] = 
		"#summary o-support-mode command documentation = o-support-mode = Choose\n"
		"experimental variations of o-support. == Synopsis == {{{ o-support-mode [n] }}}\n"
		"== Options == || `3` || Mode 3 is the same as mode 2 except that operator\n"
		"elaborations (adding attributes to operators) now get i-support even though you\n"
		"have to test the operator to elaborate an operator. In cases where the rule\n"
		"mixes support types, support defaults to o-support (and a warning is printed).\n"
		"|| || `4` || Mode 4 is the default. It is the same as mode 3 except where a\n"
		"rule mixes support types, support defaults to i-support (and a warning is still\n"
		"printed). || == Description == The o-support-mode command is used to control\n"
		"the way that o-support is determined for preferences. Only o-support modes 3 &\n"
		"4 are valid (other modes require Soar 7, which is no longer supported). O-\n"
		"support mode 4 should be considered an improved version of mode 3. The default\n"
		"o-support mode is mode 4. In o-support modes 3 & 4, support is given production\n"
		"by production; that is, all preferences generated by the RHS of a single\n"
		"instantiated production will have the same support. The difference between the\n"
		"two modes is in how they handle productions with both operator and non-operator\n"
		"augmentations on the RHS. For more information on o-support calculations, see\n"
		"the relevant appendix in the Soar manual. Running o-support-mode with no\n"
		"arguments prints out the current o-support-mode.\n"
	;
	docstrings["popd.wiki."] = 
		"#summary popd command documentation = popd = Pop the current working directory\n"
		"off the stack and change to the next directory on the stack. Can be relative\n"
		"pathname or fully specified path. == Synopsis == {{{ popd }}} == Description =\n"
		"This command pops a directory off of the directory stack and [cmd_cd changes to\n"
		"it]. See the [cmd_dirs dirs] command for an explanation of the directory stack.\n"
		"== See Also == [cmd_cd cd] [cmd_dirs dirs] [cmd_ls ls] [cmd_pushd pushd]\n"
		"[cmd_source source] [cmd_pwd pwd]\n"
	;
	docstrings["port.wiki."] = 
		"#summary port command documentation = port = Returns the port the kernel\n"
		"instance is listening on. == Synopsis == {{{ port }}}\n"
	;
	docstrings["predict.wiki."] = 
		"#summary predict command documentation = predict = Predict the next selected\n"
		"operator == Synopsis == {{{ predict }}} == Description == The predict command\n"
		"determines, based upon current operator proposals, which operator will be\n"
		"chosen during the next decision phase. If predict determines an operator tie\n"
		"will be encountered, \"tie\" is returned. If predict determines no operator will\n"
		"be selected (state no-change), \"none\" is returned. If predict determines a\n"
		"conflict will arise during the decision phase, \"conflict\" is returned. If\n"
		"predict determines a constraint failure will occur, \"constraint\" is returned.\n"
		"Otherwise, predict will return the id of the operator to be chosen. If operator\n"
		"selection will require probabilistic selection, and no alterations to the\n"
		"probabilities are made between the call to predict and decision phase, predict\n"
		"will manipulate the random number generator to enforce its prediction. == See\n"
		"Also == [cmd_select select]\n"
	;
	docstrings["preferences.wiki."] = 
		"#summary preferences command documentation = preferences = Examine details\n"
		"about the preferences that support the specified _identifier_ and _attribute_.\n"
		"== Synopsis == {{{ preferences [options] [identifier [attribute]] }}} ===\n"
		"Default Aliases === || `pref` || `preferences` || == Options == || `-0, -n, --\n"
		"none` || Print just the preferences themselves || || `-1, -N, --names` || Print\n"
		"the preferences and the names of the productions that generated them || || `-2,\n"
		"-t, --timetags` || Print the information for the `--names` option above plus\n"
		"the timetags of the wmes matched by the LHS of the indicated productions || ||\n"
		"`-3, -w, --wmes` || Print the information for the `--timetags` option above\n"
		"plus the entire WME matched on the LHS. || || `-o, --object` || Print the\n"
		"support for all the WMEs that comprise the object (the specified _identifier_).\n"
		"|| || `identifier` || Must be an existing Soar object _identifier_. || ||\n"
		"`attribute` || Must be an existing _attribute_ of the specified _identifier_. |\n"
		"| == Description == The preferences command prints all the preferences for the\n"
		"given object identifier and attribute. If identifier and attribute are not\n"
		"specified, they default to the current state and the current operator. The Soar\n"
		"syntax attribute carat (`^`) is optional when specifying the attribute. The\n"
		"optional arguments indicates the level of detail to print about each\n"
		"preference. This command is useful for examining which candidate operators have\n"
		"been proposed and what relationships, if any, exist among them. If a preference\n"
		"has O-support, the string, `:O` will also be printed. When only the identifier\n"
		"is specified on the commandline, if the identifier is a state, Soar uses the\n"
		"default attribute `^operator`. If the identifier is not a state, Soar prints\n"
		"the support information for all WMEs whose value is the identifier. When an\n"
		"identifier and the `--object` flag are specified, Soar prints the preferences /\n"
		"WME support for all WMEs comprising the specified identifier. For the time\n"
		"being, [cmd_numeric_indifferent_mode numeric-indifferent] preferences are\n"
		"listed under the heading `binary indifferents:`. By default, using the `--wmes`\n"
		"option with a WME on the top state will only print the timetags. To change\n"
		"this, the kernel can be recompiled with `DO_TOP_LEVEL_REF_CTS`, but this has\n"
		"other consequences (see comments in `kernel.h`). == Examples == This example\n"
		"prints the preferences on `(S1 ^operator)` and the production names which\n"
		"created the preferences: {{{ soar> preferences S1 operator --names Preferences\n"
		"for S1 ^operator: acceptables: O2 (fill) + From waterjug*propose*fill O3 (fill)\n"
		"+ From waterjug*propose*fill unary indifferents: O2 (fill) = From\n"
		"waterjug*propose*fill O3 (fill) = From waterjug*propose*fill }}} If the current\n"
		"state is `S1`, then the above syntax is equivalent to: {{{ preferences -n }}}\n"
		"This example shows the support for the WMEs with the ^jug attribute: {{{ soar>\n"
		"preferences s1 jug Preferences for S1 ^jug: acceptables: (S1 ^jug I4) :O (S1 ^\n"
		"jug J1) :O }}} This example shows the support for the WMEs with value `J1`, and\n"
		"the productions that generated them: {{{ soar> pref J1 -1 Support for (31: O3 ^\n"
		"jug J1) (O3 ^jug J1) From water-jug*propose*fill Support for (11: S1 ^jug J1)\n"
		"(S1 ^jug J1) :O From water-jug*apply*initialize-water-jug-look-ahead }}} This\n"
		"example shows the support for all WMEs that make up the object `S1`: {{ { soar>\n"
		"pref -o s1 Support for S1 ^problem-space: (S1 ^problem-space P1) Support for S1\n"
		"^name: (S1 ^name water-jug) :O Support for S1 ^jug: (S1 ^jug I4) :O (S1 ^jug\n"
		"J1) :O Support for S1 ^desired: (S1 ^desired D1) :O Support for S1 ^\n"
		"superstate-set: (S1 ^superstate-set nil) Preferences for S1 ^operator:\n"
		"acceptables: O2 (fill) + O3 (fill) + Arch-created wmes for S1 : (2: S1 ^\n"
		"superstate nil) (1: S1 ^type state) Input (IO) wmes for S1 : (3: S1 ^io I1) }}}\n"
	;
	docstrings["print.wiki."] = 
		"#summary print command documentation = print = Print items in working memory or\n"
		"production memory. == Synopsis == {{{ print [options] [production_name] print\n"
		"[options] identifier|timetag|pattern }}} === Default Aliases === || `p` ||\n"
		"`print` || || `pc` || `print --chunks` || || `wmes` || `print --internal` || ==\n"
		"Options == === Printing items in production memory === ==== What productions to\n"
		"print: ==== || `-a, --all` || print the names of all productions currently\n"
		"loaded || || `-c, --chunks` || print the names of all chunks currently loaded |\n"
		"| || `-D, --defaults` || print the names of all default productions currently\n"
		"loaded || || `-j, --justifications` || print the names of all justifications\n"
		"currently loaded. || || `-r, --rl` || Print Soar-RL rules || || `-T, --\n"
		"template` || Print Soar-RL templates || || `-u, --user` || print the names of\n"
		"all user productions currently loaded || || `production_name` || print the\n"
		"production named `production-name` || ==== How to print the productions: ==== |\n"
		"| `-f, --full` || When printing productions, print the whole production. This\n"
		"is the default when printing a named production. || || `-F, --filename` || also\n"
		"prints the name of the file that contains the production. || || `-i, --\n"
		"internal` || items should be printed in their internal form. For productions,\n"
		"this means leaving conditions in their reordered (rete net) form. || || `-n, --\n"
		"name` || When printing productions, print only the name and not the whole\n"
		"production. This is the default when printing any category of productions, as\n"
		"opposed to a named production. || === Printing items in working memory === ||\n"
		"`-d, --depth n` || This option overrides the default printing depth (see the\n"
		"[cmd_default_wme_depth default-wme-depth] command for more detail). || || `-e,\n"
		"--exact` || Print only the wmes that match the pattern || || `-i, --internal` |\n"
		"| items should be printed in their internal form. For working memory, this\n"
		"means printing the individual elements with their timetags and activation,\n"
		"rather than the objects. || || `-t, --tree` || wmes should be printed in in a\n"
		"tree form (one wme per line). || || `-v, --varprint` || Print identifiers\n"
		"enclosed in angle brackets. || || `identifier` || print the object `identifier\n"
		"`. `identifier` must be a valid Soar symbol such as _S1_ || || `pattern` ||\n"
		"print the object whose working memory elements matching the given `pattern`.\n"
		"See Description for more information on printing objects matching a specific\n"
		"`pattern`. || || `timetag` || print the object in working memory with the given\n"
		"`timetag` || === Printing the current subgoal stack === || `-s, -- stack` ||\n"
		"Specifies that the Soar goal stack should be printed. By default this includes\n"
		"both states and operators. || || `-o, --operators` || When printing the stack,\n"
		"print only _operators_. || || `-S, --states` || When printing the stack, print\n"
		"only _states_. || == Description == The print command is used to print items\n"
		"from production memory or working memory. It can take several kinds of\n"
		"arguments. When printing items from working memory, the Soar objects are\n"
		"printed unless the `--internal` flag is used, in which case the wmes themselves\n"
		"are printed. {{{ (identifier ^attribute value [activation] [+]) }}} The\n"
		"activation value is only printed if activation is turned on. See [cmd_wma wma].\n"
		"The pattern is surrounded by parentheses. The `identifier`, `attribute`, and\n"
		"`value` must be valid Soar symbols or the wildcard symbol `*` which matches all\n"
		"occurrences. The optional `+` symbol restricts pattern matches to acceptable\n"
		"preferences. If wildcards are included, an object will be printed for each\n"
		"pattern match, even if this results in the same object being printed multiple\n"
		"times. == Examples == Print the objects in working memory (and their timetags)\n"
		"which have wmes with identifier `s1` and value `v2` (note: this will print the\n"
		"entire `s1` object for each match found): {{{ print --internal (s1 ^* v2) }}}\n"
		"Print the Soar stack which includes states and operators: {{{ print --stack }}}\n"
		"Print the named production in its RETE form: {{{ print -if named*production }}}\n"
		"Print the names of all user productions currently loaded: {{{ print -u }}}\n"
		"Default print vs tree print: {{{ print s1 --depth 2 (S1 ^io I1 ^reward-link R1\n"
		"^superstate nil ^type state) (I1 ^input-link I2 ^output-link I3) print s1 --\n"
		"depth 2 --tree (S1 ^io I1) (I1 ^input-link I2) (I1 ^output-link I3) (S1 ^\n"
		"reward-link R1) (S1 ^superstate nil) (S1 ^type state) }}} == See Also ==\n"
		"[cmd_default_wme_depth default-wme-depth] [cmd_wma wma]\n"
	;
	docstrings["production_find.wiki."] = 
		"#summary production-find command documentation = production-find = Find\n"
		"productions by condition or action patterns. == Synopsis == {{{ production-find\n"
		"[-lrs[n|c]] pattern }}} == Options == || `-c, --chunks` || Look _only_ for\n"
		"chunks that match the pattern. || || `-l, --lhs` || Match pattern only against\n"
		"the conditions (left-hand side) of productions (default). || || `-n, --\n"
		"nochunks` || _Disregard_ chunks when looking for the pattern. || || `-r, --rhs`\n"
		"|| Match pattern against the actions (right-hand side) of productions. || || `-\n"
		"s, --show-bindings` || Show the bindings associated with a wildcard pattern. ||\n"
		"|| `pattern` || Any pattern that can appear in productions. || == Description =\n"
		"= The production-find command is used to find productions in production memory\n"
		"that include conditions or actions that match a given `pattern`. The pattern\n"
		"given specifies one or more condition elements on the left hand side of\n"
		"productions (or negated conditions), or one or more actions on the right-hand\n"
		"side of productions. Any pattern that can appear in productions can be used in\n"
		"this command. In addition, the asterisk symbol, `*`, can be used as a wildcard\n"
		"for an attribute or value. It is important to note that the whole pattern,\n"
		"including the parenthesis, must be enclosed in curly braces for it to be parsed\n"
		"properly. The variable names used in a call to production-find do not have to\n"
		"match the variable names used in the productions being retrieved. The\n"
		"production-find command can also be restricted to apply to only certain types\n"
		"of productions, or to look only at the conditions or only at the actions of\n"
		"productions by using the flags. == Examples == Find productions that test that\n"
		"some object `gumby` has an attribute `alive` with value `t`. In addition, limit\n"
		"the rules to only those that test an operator named `foo`: {{{ production-find\n"
		"( ^gumby ^operator.name foo)( ^alive t) }}} Note that in the above command, ``\n"
		"does not have to match the exact variable name used in the production. Find\n"
		"productions that propose the operator `foo`: {{{ production-find --rhs ( ^\n"
		"operator +)( ^name foo) }}} Find chunks that test the attribute ^pokey: {{ {\n"
		"production-find --chunks ( ^pokey *) }}} Examples using the water-jugs demo:\n"
		"{{{ source demos/water-jug/water-jug.soar production-find ( ^name *)( ^volume\n"
		"*) production-find ( ^name *)( ^volume 3) production-find --rhs ( ^* ) }}} ==\n"
		"See Also == [cmd_sp sp]\n"
	;
	docstrings["pushd.wiki."] = 
		"#summary pushd command documentation = pushd = Push a directory onto the\n"
		"directory stack, changing to it. == Synopsis == {{{ pushd directory }}} ==\n"
		"Description == Maintain a stack of working directories and push the directory\n"
		"on to the stack. Can be relative path name or fully specified. == See Also ==\n"
		"[cmd_cd cd] [cmd_dirs dirs] [cmd_ls ls] [cmd_popd popd] [cmd_source source]\n"
		"[cmd_pwd pwd]\n"
	;
	docstrings["pwatch.wiki."] = 
		"#summary pwatch command documentation = pwatch = Trace firings and retractions\n"
		"of specific productions. == Synopsis == {{{ pwatch [-d|e] [production name] }}}\n"
		"=== Default Aliases === || `pw` || `pwatch` || == Options == || `-d, --disable,\n"
		"--off` || Turn production watching off for the specified production. If no\n"
		"production is specified, turn production watching off for all productions. || |\n"
		"| `-e, --enable, --on` || Turn production watching on for the specified\n"
		"production. The use of this flag is optional, so this is pwatch's default\n"
		"behavior. If no production is specified, all productions currently being\n"
		"watched are listed. || || `production name` || The name of the production to\n"
		"watch. || == Description == The pwatch command enables and disables the tracing\n"
		"of the firings and retractions of individual productions. This is a companion\n"
		"command to [cmd_watch watch], which cannot specify individual productions by\n"
		"name. With no arguments, pwatch lists the productions currently being traced.\n"
		"With one production-name argument, pwatch enables tracing the production; `--\n"
		"enable` can be explicitly stated, but it is the default action. If `--disable`\n"
		"is specified followed by a production-name, tracing is turned off for the\n"
		"production. When no production-name is specified, `--enable` lists all\n"
		"productions currently being traced, and `--disable` disables tracing of all\n"
		"productions. Note that pwatch now only takes one production per command. Use\n"
		"multiple times to watch multiple functions. == See Also == [cmd_watch watch]\n"
	;
	docstrings["pwd.wiki."] = 
		"#summary pwd command documentation = pwd = Print the current working directory.\n"
		"== Synopsis == {{{ pwd }}} === Default Aliases === || `topd` || `pwd` || ==\n"
		"Description == Prints the current working directory of Soar.\n"
	;
	docstrings["rand.wiki."] = 
		"#summary rand command documentation = rand = Generate a random number. ==\n"
		"Synopsis == {{{ rand # returns a real number in [0,1] (calls SoarRand()) rand n\n"
		"# returns a real number in [0,n] (calls SoarRand(max)) rand --integer # returns\n"
		"an integer in [0,2^32-1] (calls SoarRandInt) rand --integer n # returns an\n"
		"integer in [0,n], n<2^32 (calls SoarRandInt(max)) }}} == Options == || `-i, --\n"
		"integer` || Return an integer, optional argument is upper-bound (inclusive) ||\n"
		"== Description == Generates a random non-negative number, returning the result\n"
		"in a string. == Examples == {{{ rand --integer 10 # returns 0..10, for example:\n"
		"\"4\" }}}\n"
	;
	docstrings["remove_wme.wiki."] = 
		"#summary remove-wme command documentation = remove-wme = Manually remove an\n"
		"element from working memory. == Synopsis == {{{ remove-wme timetag }}} ===\n"
		"Default Aliases === || `rw` || `remove-wme` || == Options == || `timetag` || A\n"
		"positive integer matching the timetag of an existing working memory element. ||\n"
		"== Description == The remove-wme command removes the working memory element\n"
		"with the given timetag. This command is provided primarily for use in Soar\n"
		"input functions; although there is no programming enforcement, remove-wme\n"
		"should only be called from registered input functions to delete working memory\n"
		"elements on Soar's input link. Beware of weird side effects, including system\n"
		"crashes. == Warnings == remove-wme should never be called from the RHS: if you\n"
		"try to match a wme on the LHS of a production, and then remove the matched wme\n"
		"on the RHS, Soar will crash. If used other than by input and output functions\n"
		"interfaced with Soar, this command may have weird side effects (possibly even\n"
		"including system crashes). Removing input wmes or context/impasse wmes may have\n"
		"unexpected side effects. You've been warned. == See Also == [cmd_add_wme add-\n"
		"wme]\n"
	;
	docstrings["replay_input.wiki."] = 
		"#summary replay-input command documentation = replay-input = Load input wmes\n"
		"for each decision cycle from a file. == Synopsis == {{{ replay-input --open\n"
		"filename replay-input [--query] replay-input --close }}} == Options == ||\n"
		"`filename` || Open filename and load input and random seed. || || `-o, --open`\n"
		"|| Reads captured input from file in to memory and seeds the random number\n"
		"generator. || || `-q, --query` || Returns open if input replay is active or\n"
		"closed if not active. || || `-c, --close` || Stop replaying input. || ==\n"
		"Description == Replays input stored using the capture-input command. The replay\n"
		"file also includes a random number generator seed and seeds the generator with\n"
		"that. == See Also == [cmd_capture_input capture-input]\n"
	;
	docstrings["rete_net.wiki."] = 
		"#summary rete-net command documentation = rete-net = Save the current Rete net,\n"
		"or restore a previous one. == Synopsis == {{{ rete-net -s|l filename }}} ===\n"
		"Default Aliases === || `rn` || `rete-net` || == Options == || `-s, --save` ||\n"
		"Save the Rete net in the named file. Cannot be saved when there are\n"
		"justifications present. Use `excise -j` || || `-l, -r, --load, --restore` ||\n"
		"Load the named file into the Rete network. working memory and production memory\n"
		"must both be empty. Use [cmd_excise excise] || || `filename` || The name of the\n"
		"file to save or load. || == Description == The rete-net command saves the\n"
		"current Rete net to a file or restores a Rete net previously saved. The Rete\n"
		"net is Soar's internal representation of production and working memory; the\n"
		"conditions of productions are reordered and common substructures are shared\n"
		"across different productions. This command provides a fast method of saving and\n"
		"loading productions since a special format is used and no parsing is necessary.\n"
		"Rete-net files are portable across platforms that support Soar. Normally users\n"
		"wish to save only production memory. Note that justifications cannot be present\n"
		"when saving the Rete net. Issuing an [cmd_init_soar init-soar] before saving a\n"
		"Rete net will remove all justifications and working memory elements. If the\n"
		"filename contains a suffix of `.Z`, then the file is compressed automatically\n"
		"when it is saved and uncompressed when it is loaded. Compressed files may not\n"
		"be portable to another platform if that platform does not support the same\n"
		"uncompress utility. == See Also == [cmd_excise excise] [cmd_init_soar init-\n"
		"soar]\n"
	;
	docstrings["rl.wiki."] = 
		"#summary rl command documentation = rl = Control how numeric indifferent\n"
		"preference values in RL rules are updated via reinforcement learning. ==\n"
		"Synopsis == {{{ rl -g|--get rl -s|--set rl -t|--trace rl -S|--stats }}} ==\n"
		"Options == || `-g, --get` || Print current parameter setting || || `-s, -- set`\n"
		"|| Set parameter value || || `-t, --trace` || Print, clear, or init traces || |\n"
		"| `-S, --stats` || Print statistic summary or specific statistic || ==\n"
		"Description == The `rl` command sets parameters and displays information\n"
		"related to reinforcement learning. The `print` and `watch` commands display\n"
		"additional RL related information not covered by this command. === Parameters =\n"
		"== Due to the large number of parameters, the `rl` command uses the `--get|--\n"
		"set ` convention rather than individual switches for each parameter. Running\n"
		"`rl` without any switches displays a summary of the parameter settings. ||\n"
		"*Parameter* || *Description* || *Possible values* || *Default* || || `chunk-\n"
		"stop` || If enabled, chunking does not create duplicate RL rules that differ\n"
		"only in numeric-indifferent preference value || `on`, `off` || `on` || ||\n"
		"`decay-mode` || How the learning rate changes over time || `normal`,\n"
		"`exponential`, `logarithmic`, `delta-bar-delta` || `normal` || || `discount-\n"
		"rate` || Temporal discount (gamma) || `[`0, 1`]` || 0.9 || || `eligibility-\n"
		"trace-decay-rate` || Eligibility trace decay factor (lambda) || `[`0, 1`]` || 0\n"
		"|| || `eligibility-trace-tolerance` || Smallest eligibility trace value not\n"
		"considered 0 || (0, inf) || 0.001 || || `hrl-discount` || Discounting of RL\n"
		"updates over time in impassed states || `on`, `off` || `off` || || `learning` |\n"
		"| Reinforcement learning enabled || `on`, `off` || `off` || || `learning-rate`\n"
		"|| Learning rate (alpha) || `[`0, 1`]` || 0.3 || || `learning-policy` || Value\n"
		"update policy || `sarsa`, `q-learning` || `sarsa` || || `meta` || Store rule\n"
		"metadata in header string || `on`, `off` || `off` || || `temporal-discount` ||\n"
		"Discount RL updates over gaps || `on`, `off` || `on` || || `temporal-extension`\n"
		"|| Propagation of RL updates over gaps || `on`, `off` || `on` || || `trace` ||\n"
		"Update the trace || `on`, `off` || `off` || || `update-log-path` || File to log\n"
		"information about RL rule updates || `\"\"`, `` || `\"\"` || ==== Apoptosis\n"
		"Parameters ==== || *Parameter* || *Description* || *Possible values* ||\n"
		"*Default* || || `apoptosis` || Automatic excising of productions via base-level\n"
		"decay || `none`, `chunks`, `rl-chunks` || `none` || || `apoptosis-decay` ||\n"
		"Base-level decay parameter || `[`0, 1`]` || 0.5 || || `apoptosis-thresh` ||\n"
		"Base-level threshold parameter (negates supplied value) || (0, inf) || 2 ||\n"
		"Apoptosis is a process to automatically excise chunks via the base-level decay\n"
		"model (where rule firings are the activation events). A value of `chunks` has\n"
		"this apply to any chunk, whereas `rl-chunks` means only chunks that are also RL\n"
		"rules can be forgotten. === Statistics === Soar tracks some RL statistics over\n"
		"the lifetime of the agent. These can be accessed using `rl --stats `. Running\n"
		"`rl --stats` without a statistic will list the values of all statistics. ||\n"
		"`update-error` || Difference between target and current values in last RL\n"
		"update || || `total-reward` || Total accumulated reward in the last update || |\n"
		"| `global-reward` || Total accumulated reward since agent initialization || ===\n"
		"Delta-Bar-Delta === This is an experimental feature of Soar RL. It based on the\n"
		"work in Richard S. Sutton's paper \"Adapting Bias by Gradient Descent: An\n"
		"Incremental Version of Delta-Bar-Delta\", available online at http://\n"
		"webdocs.cs.ualberta.ca/~sutton/papers/sutton-92a.pdf. Delta Bar Delta (DBD) is\n"
		"implemented in Soar RL as a decay mode. It changes the way all the rules in the\n"
		"eligibility trace get their values updated. In order to implement this, the\n"
		"agent gets an additional learning parameter \"meta-learning-rate\" and each rule\n"
		"gets two additional decay parameters: beta and h. The meta learning rate is set\n"
		"manually; the per-rule features are handles automatically by the DBD algorithm.\n"
		"The key idea is that the meta parameters keep track of how much a rule's RL\n"
		"value has been updated recently, and if a rule gets updates in the same\n"
		"direction multiple times in a row then subsequent updates in the same direction\n"
		"will have more effect. So DBD acts sort of like momentum for the learning rate.\n"
		"To enable DBD, use \"rl --set decay-mode delta-bar-delta\". To change the meta\n"
		"learning rate, use e.g. \"rl --set meta-learning-rate 0.1\". When you execute\n"
		"\"rl\", under the Experimental section you'll see the current settings for decay-\n"
		"mode and meta-learning-rate. Also, if a rule gets printed concisely (e.g. by\n"
		"executing \"p\"), and the rule is an RL rule, and the decay mode is set to delta-\n"
		"bar-delta, then instead of printing the rule name followed by the update count\n"
		"and the RL value, it will print the rule name, beta, h, update count, and RL\n"
		"value. Note that DBD is a different feature than \"meta\". Meta determines\n"
		"whether metadata about a production is stored in its header string. If meta is\n"
		"on and DBD is on, then each rule's beta and h values will be stored in the\n"
		"header string in addition to the update count, so you can print out the rule,\n"
		"source it later and that metadata about the rule will still be in place. === RL\n"
		"Update Logging === Sets a path to a file that Soar RL will write to whenever a\n"
		"production's RL value gets updated. This can be useful for logging these\n"
		"updates without having to capture all of Soar's output and parse it for these\n"
		"updates. Enable with e.g. \"rl --set update-log-path rl_log.txt\". Disable with\n"
		"-set update-log-path \"\"> - that is, use the empty string \"\" as the log path.\n"
		"The current log path appears under the experimental section when you execute\n"
		"\"rl\". === RL Trace === If \"rl --set trace on\" has been called, then proposed\n"
		"operators will be recorded in the trace for all goal levels. Along with\n"
		"operator names and other attribute-value pairs, transition probabilities\n"
		"derived from their numeric preferences are recorded. Legal arguments following\n"
		"\"rl -t\" or \"rl --trace\" are as follows: || `print` || Print the trace for the\n"
		"top state. || || `clear` || Erase the traces for all goal levels. || || `init`\n"
		"|| Restart recording from the beginning of the traces for all goal levels. ||\n"
		"These may be followed by an optional numeric argument specifying a specific\n"
		"goal level to print, clear, or init. \"rl -t init\" is called automatically\n"
		"whenever Soar is reinitialized. However, \"rl -t clear\" is never called\n"
		"automatically. The format in which the trace is printed is designed to be used\n"
		"by the program dot, as part of the _ G_ r_ a_ p_ h_ v_ i_ z suite. The command\n"
		"\"ctf rl.dot rl - t\" will print the trace for the top state to the file\n"
		"\"rl.dot\". (The default behavior for \"rl -t\" is to print the trace for the top\n"
		"state.) Here are some sample dot invocations for the top state: || `dot -Tps\n"
		"rl.dot -o rl.ps` || `ps2pdf rl.ps` || Generate a .ps file and convert it to\n"
		".pdf. || || `dot -Tsvg rl.dot -o rl.svg` || `inkscape -f rl.svg -A rl.pdf` ||\n"
		"Generate a .svg file and convert it to .pdf. || The .svg format works better\n"
		"for large traces. == See Also == [cmd_excise excise] [cmd_print print]\n"
		"[cmd_watch watch]\n"
	;
	docstrings["run.wiki."] = 
		"#summary run command documentation = run = Begin Soar's execution cycle. ==\n"
		"Synopsis == {{{ run -[d|e|o|p][g][u|n][s] [count] [-i e|p|d|o] }}} === Default\n"
		"Aliases === || `d` || `run -d 1` || || `e` || `run -e 1` || || `step` || `run 1\n"
		"` || == Options == || `-d, --decision` || Run Soar for count decision cycles. |\n"
		"| || `-e, --elaboration` || Run Soar for count elaboration cycles. || || `-o,\n"
		"--output` || Run Soar until the nth time output is generated by the agent.\n"
		"Limited by the value of [cmd_max_nil_output_cycles max-nil-output-cycles]. || |\n"
		"| `-p, --phase` || Run Soar by phases. A phase is either an input phase,\n"
		"proposal phase, decision phase, apply phase, or output phase. || || `-s, --\n"
		"self` || If other agents exist within the kernel, do not run them at this time.\n"
		"|| || `-u, --update` || Sets a flag in the update event callback requesting\n"
		"that an environment updates. This is the default if `--self` is not specified.\n"
		"|| || `-n, --noupdate` || Sets a flag in the update event callback requesting\n"
		"that an environment does not update. This is the default if `--self` is\n"
		"specified. || || `count` || A single integer which specifies the number of\n"
		"cycles to run Soar. || || `-i, --interleave` || Support round robin execution\n"
		"across agents at a finer grain than the run-size parameter. `e` = elaboration,\n"
		"`p` = phase, `d` = decision, `o` = output || || `-g, --goal` || Run agent until\n"
		"a goal retracts || === Deprecated Options === These may be reimplemented in the\n"
		"future. || `--operator` || Run Soar until the nth time an operator is selected.\n"
		"|| || `--state` || Run Soar until the nth time a state is selected. || ==\n"
		"Description == The run command starts the Soar execution cycle or continues any\n"
		"execution that was temporarily stopped. The default behavior of run, with no\n"
		"arguments, is to cause Soar to execute until it is halted or interrupted by an\n"
		"action of a production, or until an external interrupt is issued by the user.\n"
		"The run command can also specify that Soar should run only for a specific\n"
		"number of Soar cycles or phases (which may also be prematurely stopped by a\n"
		"production action or the [cmd_stop_soar stop-soar] command). This is helpful\n"
		"for debugging sessions, where users may want to pay careful attention to the\n"
		"specific productions that are firing and retracting. The run command takes\n"
		"optional arguments: an integer, `count`, which specifies how many units to run;\n"
		"and a `units` flag indicating what steps or increments to use. If `count` is\n"
		"specified, but no `units` are specified, then Soar is run by decision cycles.\n"
		"If `units` are specified, but `count` is unpecified, then `count` defaults to\n"
		"'1'. If both are unspecified, Soar will run until either a `halt` is executed,\n"
		"an interrupt is received, or max stack depth is reached. If there are multiple\n"
		"Soar agents that exist in the same Soar process, then issuing a run command in\n"
		"any agent will cause all agents to run with the same set of parameters, unless\n"
		"the flag `--self` is specified, in which case only that agent will execute. If\n"
		"an environment is registered for the kernel's update event, then when the event\n"
		"it triggered, the environment will get information about how the run was\n"
		"executed. If a run was executed with the `--update` option, then then event\n"
		"sends a flag requesting that the environment actually update itself. If a run\n"
		"was executed with the --noupdate option, then the event sends a flag requesting\n"
		"that the environment not update itself. The `--update` option is the default\n"
		"when run is specified without the `--self` option is not specified. If the `--\n"
		"self` option is specified, then the `--noupdate` option is on by default. It is\n"
		"up to the environment to check for these flags and honor them. Some use cases\n"
		"include: || `run --self` || runs one agent but not the environment || || `run -\n"
		"-self --update` || runs one agent and the environment || || `run` || runs all\n"
		"agents and the environment || || `run --noupdate` || runs all agents but not\n"
		"the environment || == Setting an interleave size == When there are multiple\n"
		"agents running within the same process, it may be useful to keep agents more\n"
		"closely aligned in their execution cycle than the run increment (`--\n"
		"elaboration, --phases, --decisions, --output`) specifies. For instance, it may\n"
		"be necessary to keep agents in \"lock step\" at the phase level, even though the\n"
		"run command issued is for 5 decisions. Some use cases include: || `run -d 5 - i\n"
		"p` || run the agent one phase and then move to the next agent, looping over\n"
		"agents until they have run for 5 decision cycles || || `run -o 3 -i d` || run\n"
		"the agent one decision cycle and then move to the next agent. When an agent\n"
		"generates output for the 3rd time, it no longer runs even if other agents\n"
		"continue. || The `interleave` parameter must always be equal to or smaller than\n"
		"the specified run parameter. === Note === If Soar has been stopped due to a\n"
		"`halt` action, an [cmd_init_soar init-soar] command must be issued before Soar\n"
		"can be restarted with the run command.\n"
	;
	docstrings["save_backtraces.wiki."] = 
		"#summary save-backtraces command documentation = save-backtraces = Save trace\n"
		"information to explain chunks and justifications. == Synopsis == {{{ save-\n"
		"backtraces [-ed] }}} == Options == || `-e, --enable, --on` || Turn explain\n"
		"sysparam on. || || `-d, --disable, --off` || Turn explain sysparam off. || ==\n"
		"Description == The save-backtraces variable is a toggle that controls whether\n"
		"or not backtracing information (from chunks and justifications) is saved. When\n"
		"save-backtraces is set to `off`, backtracing information is not saved and\n"
		"explanations of the chunks and justifications that are formed can not be\n"
		"retrieved. When save-backtraces is set to `on`, backtracing information can be\n"
		"retrieved by using the [cmd_explain_backtraces explain-backtraces] command.\n"
		"Saving backtracing information may slow down the execution of your Soar\n"
		"program, but it can be a very useful tool in understanding how chunks are\n"
		"formed. == See Also == [cmd_explain_backtraces explain-backtraces]\n"
	;
	docstrings["select.wiki."] = 
		"#summary select command documentation = select = Force the next selected\n"
		"operator == Synopsis == {{{ select id }}} == Options == If no \"id\" is supplied,\n"
		"currently \"select\"ed operator (if applicable) is displayed || `id` || case-\n"
		"insensitive operator id of the operator to be selected in the next decision\n"
		"phase || == Description == The select command will force the selection of an\n"
		"operator, whose id is supplied as an argument, during the next decision phase.\n"
		"If the argument is not a proposed operator in the next decision phase, an error\n"
		"is raised and operator selection proceeds as if the select command had not been\n"
		"called. Otherwise, the supplied operator will be selected as the next operator,\n"
		"regardless of preferences. If select is called with no id argument, the command\n"
		"returns the operator id currently forced for selection (by a previous call to\n"
		"select), if one exists. == Examples == Assuming operator \"O2\" is a valid\n"
		"operator, this would select it as the next operator to be selected: {{{ select\n"
		"O2 }}} After this command, issuing just \"select\" will get \"O2\" as a return: {{\n"
		"{ select }}} == See Also == [cmd_predict predict]\n"
	;
	docstrings["set_library_location.wiki."] = 
		"#summary set-library-location command documentation = set-library-location =\n"
		"Set the top level directory containing demos/help/etc. == Synopsis == {{{ set-\n"
		"library-location [directory] }}} == Options == || `directory` || The new\n"
		"desired library location. || == Description == Invoke with no arguments to\n"
		"query what the current library location is. The library location should contain\n"
		"at least the help/ subdirectory and the command-names file for help to work. ==\n"
		"See Also == [cmd_help help]\n"
	;
	docstrings["set_stop_phase.wiki."] = 
		"#summary set-stop-phase command documentation = set-stop-phase = Controls the\n"
		"phase where agents stop when running by decision. == Synopsis == {{{ set-stop-\n"
		"phase -[ABadiop] }}} == Options == Options `-A` and `-B` are optional and\n"
		"mutually exclusive. If not specified, the default is `-B`. Only one of `-a`, `-\n"
		"d`, `-i`, `-o`, `-p` must be selected. With no options, reports the current\n"
		"stop phase. || `-A, --after` || Stop after specified phase. || || `-B, --\n"
		"before` || Stop before specified phase (the default). || || `-a, --apply` ||\n"
		"Select the apply phase. || || `-d, --decision` || Select the decision phase. ||\n"
		"|| `-i, --input` || Select the input phase. || || `-o, --output` || Select the\n"
		"output phase. || || `-p, --proposal` || Select the proposal phase. || ==\n"
		"Description == When running by decision cycle it can be helpful to have agents\n"
		"stop at a particular point in its execution cycle. This command allows the user\n"
		"to control which phase Soar stops in. The precise definition is that \"running\n"
		"for _n_ decisions and stopping before phase _ph_ means to run until the\n"
		"decision cycle counter has increased by _n_ and then stop when the next phase\n"
		"is _ph_\". The phase sequence (as of this writing) is: input, proposal,\n"
		"decision, apply, output. Stopping after one phase is exactly equivalent to\n"
		"stopping before the next phase. On initialization Soar defaults to stopping\n"
		"before the input phase (or after the output phase, however you like to think of\n"
		"it). Setting the stop phase applies to all agents. == Examples == {{{ set-stop-\n"
		"phase -Bi // stop before input phase set-stop-phase -Ad // stop after decision\n"
		"phase (before apply phase) set-stop-phase -d // stop before decision phase set-\n"
		"stop-phase --after --output // stop after output phase set-stop-phase / /\n"
		"reports the current stop phase }}}\n"
	;
	docstrings["smem.wiki."] = 
		"#summary smem command documentation = smem = Control the behavior of semantic\n"
		"memory. == Synopsis == {{{ smem smem -e|--enable|--on smem -d|--disable|--off\n"
		"smem -i|--init smem -g|--get smem -s|--set smem -S|--stats [] smem -t|-- timers\n"
		"[] smem -a|--add smem -p|--print [] [] smem -v|--viz [] [] smem -b|-- backup\n"
		"}}} == Options == || *Option* || *Description* || || `-e, --enable, -- on` ||\n"
		"Enable semantic memory. || || `-d, --disable, --off` || Disable semantic\n"
		"memory. || || `-g, --get` || Print current parameter setting || || `-s, --set`\n"
		"|| Set parameter value || || `-i, --init` || Reinitialize ALL memories || || `-\n"
		"S, --stats` || Print statistic summary or specific statistic || || `-t, --\n"
		"timers` || Print timer summary or specific statistic || || `-a, --add` || Add\n"
		"concepts to semantic memory || || `-r, --remove`|| Remove concepts from\n"
		"semantic memory|| || `-p, --print` || Print semantic store in user-readable\n"
		"format || || `-q, --query`|| Print concepts in semantic store matching some cue\n"
		"|| || `-h, --history`|| Print activation history for some LTI|| || `-v, -- viz`\n"
		"|| Print semantic store in graphviz format || || `-b, --backup` || Creates a\n"
		"backup of the semantic database on disk || == Description == The `smem` command\n"
		"changes the behavior of and displays information about semantic memory. The\n"
		"command `watch --smem` displays additional trace information for semantic\n"
		"memory not controlled by this command. === Parameters === Due to the large\n"
		"number of parameters, the `smem` command uses the `--get|--set ` convention\n"
		"rather than individual switches for each parameter. Running `smem` without any\n"
		"switches displays a summary of the parameter settings. ==== Main Parameters ===\n"
		"= || *Parameter* || *Description* || *Possible values* || *Default* || ||\n"
		"`append` || Controls whether database is overwritten or appended when opening\n"
		"or re-initializing || `on`, `off` || `off` || || `database` || Database storage\n"
		"method || `file`, `memory` || `memory` || || `learning` || Semantic memory\n"
		"enabled || `on`, `off` || `off` || || `merge` || Controls how retrievals\n"
		"interact with long-term identifiers in working memory || `none`, `add` || `add`\n"
		"|| || `mirroring` || Controls automatic encoding of working-memory changes ||\n"
		"`on`, `off` || `off` || || `path` || Location of database file || _empty_,\n"
		"_some path_ || _empty_ || The `learning` parameter turns the episodic memory\n"
		"module on or off. When `learning` is set to `off`, no new episodes are encoded\n"
		"and no commands put on the epmem link are processed. This is the same as using\n"
		"the enable and disable commands. The `path` parameter specifies the file system\n"
		"path the database is stored in. When `path` is set to a valid file system path\n"
		"and database mode is set to file, then the SQLite database is written to that\n"
		"path. The append parameter will determine whether all existing facts stored in\n"
		"a database on disk will be erased when semantic memory loads. Note that this\n"
		"affects semantic memory re-initialization also, i.e. if the append setting is\n"
		"off, all semantic facts stored to disk will be lost when an init-soar is\n"
		"performed. For semantic memory, append mode is by default on. Note that changes\n"
		"to database, path and append will not have an effect until the database is used\n"
		"after an initialization. This happens either shortly after launch (on first\n"
		"use) or after a database initialization command is issued. To switch databases\n"
		"or database storage types while running, set your new parameters and then\n"
		"perform an `smem --init` command. The `smem --backup` command can be used to\n"
		"make a copy of the current state of the database, whether in memory or on disk.\n"
		"This command will commit all outstanding changes before initiating the copy.\n"
		"For semantic memory to be reinitialized, all references to long-term\n"
		"identifiers in all of Soar's memories must be removed. Consequently, `smem --\n"
		"init` will reinitialize episodic, semantic, procedural, and working memories.\n"
		"It is equivalent to wiping the semantic store and executing these commands: {{\n"
		"{ epmem --close excise --all init-soar }}} The `merge` parameter controls how\n"
		"the augmentations of retrieved long-term identifiers (LTIs) interact with an\n"
		"existing LTI in working memory. If the LTI is not in working memory or has no\n"
		"augmentations in working memory, this parameter has no effect. If the\n"
		"augmentation is in working memory and has augmentations, by default (`add`),\n"
		"semantic memory will add any augmentations that augmented the LTI in a\n"
		"retrieved LTI are added to working memory. If the parameter is set to `none`\n"
		"then semantic memory will not augment the LTI. Note this is opposite of the\n"
		"value of the same parameter in episodic memory. The `mirroring` parameter\n"
		"controls a useful form of automatic encoding. If enabled (`on`), all changes to\n"
		"long-term identifiers (LTIs) in working memory are \"mirrored\" to semantic\n"
		"memory (assuming the LTI in working memory has at least one augmentation - i.e.\n"
		"no accidental clearing). The `mirrors` statistic is incremented for each LTI\n"
		"that is updated in this way. ==== Activation Parameters ==== || *Parameter* ||\n"
		"*Description* || *Possible values* || *Default* || || `activation-mode` || Sets\n"
		"the ordering bias for retrievals that match more than one memory || `recency`,\n"
		"`frequency`, `base-level` || `recency` || || `activate-on-query` || Determines\n"
		"if the results of queries should be activated || `on`, `off` || `on` || ||\n"
		"`base-decay` || Sets the decay parameter for base-level activation computation\n"
		"|| `>` 0 || 0.5 || || `base-update-policy` || Sets the policy for re-computing\n"
		"base-level activation || `stable`, `naive`, `incremental` || `stable` || ||\n"
		"`base-incremental-threshes` || Sets time deltas after which base-level\n"
		"activation is re-computed for old memories || 1, 2, 3, ... || 10 || || `thresh`\n"
		"|| Threshold for activation locality || 0, 1, ... || 100 || If `activation-\n"
		"mode` is `base-level`, three parameters control bias values. The `base-decay`\n"
		"parameter sets the free decay parameter in the base-level model. Note that we\n"
		"do implement the (Petrov, 2006) approximation, with a history size set as a\n"
		"compile-time parameter (default=10). The `base-update-policy` sets the\n"
		"frequency with which activation is recomputed. The default, `stable`, only\n"
		"recomputes activation when a memory is referenced (through storage or\n"
		"retrieval). The `naive` setting will update the entire candidate set of\n"
		"memories (defined as those that match the most constraining cue WME) during a\n"
		"retrieval, which has severe performance detriment and should be used for\n"
		"experimentation or those agents that require high-fidelity retrievals. The\n"
		"`incremental` policy updates a constant number of memories, those with last-\n"
		"access ages defined by the `base-incremental-threshes` set. ==== Performance\n"
		"Parameters ==== || *Parameter* || *Description* || *Possible values* ||\n"
		"*Default* || || `cache-size` || Number of memory pages used in the SQLite cache\n"
		"|| 1, 2, ... || 10000 || || `lazy-commit` || Delay writing semantic store\n"
		"changes to file until agent exits || `on`, `off` || `on` || || `optimization` |\n"
		"| Policy for committing data to disk || `safety`, `performance` || `performance\n"
		"` || || `page-size` || Size of each memory page used in the SQLite cache || 1k,\n"
		"2k, 4k, 8k, 16k, 32k, 64k || 8k || || `timers` || Timer granularity || `off`,\n"
		"`one`, `two`, `three` || `off` || When the database is stored to disk, the\n"
		"`lazy-commit` and `optimization` parameters control how often cached database\n"
		"changes are written to disk. These parameters trade off safety in the case of a\n"
		"program crash with database performance. When `optimization` is set to\n"
		"`performance`, the agent will have an exclusive lock on the database, meaning\n"
		"it cannot be opened concurrently by another SQLite process such as SQLiteMan.\n"
		"The lock can be relinquished by setting the database to memory or another\n"
		"database and issuing init-soar/`smem --init` or by shutting down the Soar\n"
		"kernel. === Statistics === Semantic memory tracks statistics over the lifetime\n"
		"of the agent. These can be accessed using `smem -- stats `. Running `smem\n"
		"--stats` without a statistic will list the values of all statistics. Unlike\n"
		"timers, statistics will always be updated. Available statistics are: || *Name*\n"
		"|| *Label* || *Description* || || `act_updates` || Activation Updates || Number\n"
		"of times memory activation has been calculated || || `db-lib-version` || SQLite\n"
		"Version || SQLite library version || || `edges` || Edges || Number of edges in\n"
		"the semantic store || || `mem-usage` || Memory Usage || Current SQLite memory\n"
		"usage in bytes || || `mem-high` || Memory Highwater || High SQLite memory usage\n"
		"watermark in bytes || || `mirrors` || Mirrors || Number of LTIs that have been\n"
		"automatically encoded via `mirroring` || || `nodes` || Nodes || Number of nodes\n"
		"in the semantic store || || `queries` || Queries || Number of times the *query*\n"
		"command has been issued || || `retrieves` || Retrieves || Number of times the\n"
		"*retrieve* command has been issued || || `stores` || Stores || Number of times\n"
		"the *store* command has been issued || === Timers === Semantic memory also has\n"
		"a set of internal timers that record the durations of certain operations.\n"
		"Because fine-grained timing can incur runtime costs, semantic memory timers are\n"
		"off by default. Timers of different levels of detail can be turned on by\n"
		"issuing `smem --set timers `, where the levels can be `off`, `one`, `two`, or\n"
		"`three`, `three` being most detailed and resulting in all timers being turned\n"
		"on. Note that none of the semantic memory statistics nor timing information is\n"
		"reported by the `stats` command. All timer values are reported in seconds.\n"
		"Level one || *Timer* || *Description* || || `_total` || Total smem operations |\n"
		"| Level two || *Timer* || *Description* || || `smem_api` || Agent command\n"
		"validation || || `smem_hash` || Hashing symbols || || `smem_init` || Semantic\n"
		"store initialization || || `smem_ncb_retrieval` || Adding concepts (and\n"
		"children) to working memory || || `smem_query` || Cue-based queries || ||\n"
		"`smem_storage` || Concept storage || Level three || *Timer* || *Description* ||\n"
		"|| three_activation || Recency information maintenance || === Manual Storage ==\n"
		"= Concepts can be manually added to the semantic store using the `smem --add `\n"
		"command. The format for specifying the concept is similar to that of adding\n"
		"WMEs to working memory on the RHS of productions. For example: {{{ smem --add {\n"
		"( ^add10-facts ) ( ^digit1 1 ^digit-10 11) ( ^digit1 2 ^digit-10 12) ( ^digit1\n"
		"3 ^digit-10 13) } }}} Although not shown here, the common \"dot-notation\" format\n"
		"used in writing productions can also be used for this command. Unlike agent\n"
		"storage, manual storage is automatically recursive. Thus, the above example\n"
		"will add a new concept (represented by the temporary \"arithmetic\" variable)\n"
		"with three children. Each child will be its own concept with two constant\n"
		"attribute/value pairs. === Manual Removal === Part or all of the information in\n"
		"the semantic store of some LTI can be manually removed from the semantic store\n"
		"using the {{ { smem --remove }}} command. The format for specifying what to\n"
		"remove is similar to that of adding WMEs to working memory on the RHS of\n"
		"productions. For example: {{{ smem --remove { (@W34 ^good-attribute |gibberish\n"
		"value|) } }}} If `good-attribute` is multi-valued, then all values will remain\n"
		"in the store except `|gibberish value|`. If `|gibberish value|` is the only\n"
		"value, then `good-attribute` will also be removed. It is not possible to use\n"
		"the common \"dot-notation\" for this command. Manual removal is not recursive.\n"
		"Another example highlights the ability to remove all of the values for an\n"
		"attribute: {{ { smem --remove { (@W34 ^bad-attribute) } }}} When a value is not\n"
		"given, all of the values for the given attribute are removed from the LTI in\n"
		"the semantic store. Also, it is possible to remove all augmentations of some\n"
		"LTI from the semantic store: {{{ smem --remove { (@W34) } }}} This would remove\n"
		"all attributes and values of `@W34` from the semantic store. The LTI will\n"
		"remain in the store, but will lack augmentations. (Use the following at your\n"
		"own risk.) Optionally, the user can force removal even in the event of an\n"
		"error: {{{ smem -r {(@W34 ^bad-attribute ^bad-attribute-2)} force }}} Suppose\n"
		"that LTI `@W34` did not contain `bad-attribute`. The above example would remove\n"
		"`bad-attribute- 2` even though it would indicate an error (having not found\n"
		"`bad-attribute`). === Manual Query === Queries for LTIs in the semantic store\n"
		"that match some cue can be initialized external to an agent using the `smem\n"
		"--query []` command. The format for specifying the cue is similar to that of\n"
		"adding a new identifier to working memory in the RHS of a rule: {{{ smem\n"
		"--query { ( ^attribute ^attribute-2 |constant|) } }}} Note that the root of the\n"
		"cue structure must be a variable and should be unused in the rest of the cue\n"
		"structure. This command is for testing and the full range of queries accessible\n"
		"to the agent are not yet available for the command. For example, math queries\n"
		"are not supported. The additional option of `` will trigger the display of the\n"
		"top `` most activated LTIs that matched the cue. The result of a manual query\n"
		"is either to print that no LTIs could be found or to print the information\n"
		"associated with LTIs that were found in the `smem --print ` format. === History\n"
		"=== When the activation- mode of a semantic store is set to base-level, some\n"
		"history of activation events is stored for each LTI. This history of when some\n"
		"LTI was activated can be displayed: {{{ smem --history @W34 }}} In the event\n"
		"that semantic memory is not using base-level activation, `history` will mimic\n"
		"`print`. === Visualization === When debugging agents using semantic memory it\n"
		"is often useful to inspect the contents of the semantic store. Running `smem\n"
		"--viz [] []` will output the concept rooted at `` to depth `` in graphviz\n"
		"format, including long-term identifier activation levels. If `` is omitted, the\n"
		"entire contents of the semantic store are outputted. For more information on\n"
		"this format and visualization tools, see http://www.graphviz.org. The `smem\n"
		"--print` option has the same syntax, but outputs text that is similar to using\n"
		"the `print` command to get the substructure of an identifier in working memory,\n"
		"which is possibly more useful for interactive debugging. == See Also ==\n"
		"[cmd_watch watch]\n"
	;
	docstrings["soarnews.wiki."] = 
		"#summary soarnews command documentation = soarnews = Prints information about\n"
		"the current release. == Synopsis == {{{ soarnews }}} === Default Aliases === ||\n"
		"`sn` || `soarnews` ||\n"
	;
	docstrings["source.wiki."] = 
		"#summary source command documentation = source = Load and evaluate the contents\n"
		"of a file. == Synopsis == {{{ source [options] filename }}} == Options == ||\n"
		"`filename` || The file of Soar productions and commands to load. || || `-a, --\n"
		"all` || Enable a summary for each file sourced || || `-d, --disable` || Disable\n"
		"all summaries || || `-v, --verbose` || Print excised production names || ==\n"
		"Description == Load and evaluate the contents of a file. The `filename` can be\n"
		"a relative path or a fully qualified path. source will generate an implicit\n"
		"push to the new directory, execute the command, and then pop back to the\n"
		"current working directory from which the command was issued. After the source\n"
		"completes, the number of productions sourced and excised is printed: {{{ agent>\n"
		"source demos/mac/mac.soar ****************** Total: 18 productions sourced.\n"
		"Source finished. agent> source demos/mac/mac.soar #*#*#*#*#*#*#*#*#*#*#*#*#*#*#\n"
		"*#*#*#* Total: 18 productions sourced. 18 productions excised. Source finished.\n"
		"}}} This can be disabled by using the `- d` flag: {{{ agent> source demos/mac/\n"
		"mac.soar -d ****************** Source finished. agent> source demos/mac/\n"
		"mac.soar - d #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#* Source finished. }}} A list\n"
		"of excised productions is available using the `-v` flag: {{{ agent> source\n"
		"demos/mac/ mac.soar -v #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#* Total: 18\n"
		"productions sourced. 18 productions excised. Excised productions:\n"
		"mac*detect*state*success mac*evaluate*state*failure*more*cannibals\n"
		"monitor*move-boat monitor*state*left ... }}} A separate summary for each file\n"
		"sourced can be enabled using the `-a` flag: {{{ agent> source demos/mac/\n"
		"mac.soar -a _firstload.soar: 0 productions sourced. all_source.soar: 0\n"
		"productions sourced. ** goal-test.soar: 2 productions sourced. ***\n"
		"monitor.soar: 3 productions sourced. **** search- control.soar: 4 productions\n"
		"sourced. top-state.soar: 0 productions sourced. elaborations_source.soar: 0\n"
		"productions sourced. _readme.soar: 0 productions sourced. **\n"
		"initialize-mac.soar: 2 productions sourced. ******* move-boat.soar: 7\n"
		"productions sourced. mac_source.soar: 0 productions sourced. mac.soar: 0\n"
		"productions sourced. Total: 18 productions sourced. Source finished. }}}\n"
		"Combining the `-a` and `-v` flags add excised production names to the output\n"
		"for each file. == See Also == [cmd_cd cd] [cmd_dirs dirs] [cmd_ls ls]\n"
		"[cmd_pushd pushd] [cmd_popd popd] [cmd_pwd pwd]\n"
	;
	docstrings["sp.wiki."] = 
		"#summary sp command documentation = sp = Define a Soar production. == Synopsis\n"
		"== {{{ sp {production_body} }}} == Options == || `production_body` || A Soar\n"
		"production. || == Description == The sp command creates a new production and\n"
		"loads it into production memory. `production_body` is a single argument parsed\n"
		"by the Soar kernel, so it should be enclosed in curly braces to avoid being\n"
		"parsed by other scripting languages that might be in the same process. The\n"
		"overall syntax of a rule is as follows: {{{ name [\"documentation-string\"]\n"
		"[FLAG*] LHS --> RHS }}} The first element of a rule is its name. Conventions\n"
		"for names are given in the Soar Users Manual. If given, the documentation-\n"
		"string must be enclosed in double quotes. Optional flags define the type of\n"
		"rule and the form of support its right-hand side assertions will receive. The\n"
		"specific flags are listed in a separate section below. The LHS defines the\n"
		"left-hand side of the production and specifies the conditions under which the\n"
		"rule can be fired. Its syntax is given in detail in a subsequent section. The -\n"
		"-> symbol serves to separate the LHS and RHS portions. The RHS defines the\n"
		"right-hand side of the production and specifies the assertions to be made and\n"
		"the actions to be performed when the rule fires. The syntax of the allowable\n"
		"right-hand side actions are given in a later section. The Soar Users Manual\n"
		"gives an elaborate discussion of the design and coding of productions. Please\n"
		"see that reference for tutorial information about productions. If the name of\n"
		"the new production is the same as an existing one, the old production will be\n"
		"overwritten (excised). Rules matching the following requirement are flagged\n"
		"upon being created/sourced: a rule is a Soar-RL rule if and only if its right\n"
		"hand side (RHS) consists of a single numeric preference and it is not a\n"
		"template rule (see FLAGs below). This format exists to ease technical\n"
		"requirements of identifying/updating Soar-RL rules, as well as to make it easy\n"
		"for the agent programmer to add/maintain RL capabilities within an agent. See\n"
		"the Soar-RL Manual for further details. === RULE FLAGS === The optional FLAGs\n"
		"are given below. Note that these switches are preceeded by a colon instead of a\n"
		"dash -- this is a Soar parser convention. {{{ :o-support specifies that all the\n"
		"RHS actions are to be given o-support when the production fires :no-support\n"
		"specifies that all the RHS actions are only to be given i-support when the\n"
		"production fires :default specifies that this production is a default\n"
		"production (this matters for excise -task and watch task) :chunk specifies that\n"
		"this production is a chunk (this matters for learn trace) :interrupt specifies\n"
		"that Soar should stop running when this production matches but before it fires\n"
		"(this is a useful debugging tool) :template specifies that this production\n"
		"should be used to generate new reinforcement learning rules by filling in those\n"
		"variables that match constants in working memory }}} Multiple flags may be\n"
		"used, but not both of `o-support` and `no-support`. Although you could force\n"
		"your productions to provide O-support or I-support by using these commands -- -\n"
		"regardless of the structure of the conditions and actions of the production -\n"
		"-- this is not proper coding style. The `o-support` and `no-support` flags are\n"
		"included to help with debugging, but should not be used in a standard Soar\n"
		"program. == Examples == {{{ sp {blocks*create-problem-space \"This creates the\n"
		"top-level space\" (state ^superstate nil) --> ( ^name solve-blocks-world ^\n"
		"problem-space ) ( ^name blocks-world) } }}} == See Also == [cmd_excise excise]\n"
		"[cmd_learn learn] [cmd_watch watch]\n"
	;
	docstrings["srand.wiki."] = 
		"#summary srand command documentation = srand = Seed the random number\n"
		"generator. == Synopsis == {{{ srand [seed] }}} == Options == || `seed` ||\n"
		"Random number generator seed. || == Description == Seeds the random number\n"
		"generator with the passed seed. Calling srand without providing a seed will\n"
		"seed the generator based on the contents of /dev/urandom (if available) or else\n"
		"based on time() and clock() values. == Examples == {{{ srand 0 }}}\n"
	;
	docstrings["stats.wiki."] = 
		"#summary stats command documentation = stats = Print information on Soar's\n"
		"runtime statistics. == Synopsis == {{{ stats [options] }}} === Default Aliases\n"
		"=== || `st` || `stats` || == Options == || `-m, --memory` || report usage for\n"
		"Soar's memory pools || || `-r, --rete` || report statistics about the rete\n"
		"structure || || `-s, --system` || report the system (agent) statistics\n"
		"(default) || || `-M, --max` || report the per-cycle maximum statistics\n"
		"(decision cycle time, WM changes, production fires) || || `-R, --reset` || zero\n"
		"out the per-cycle maximum statistics reported by `--max` command || || `-t, --\n"
		"track` || begin tracking the per-cycle maximum statistics reported by `--max`\n"
		"for each cycle (instead of only the max value) || || `-T, --stop-track` || stop\n"
		"and clear tracking of the per-cycle maximum statistics || || `-c, --cycle` ||\n"
		"print out collected per-cycle maximum statistics saved by `--track` in human-\n"
		"readable form || || `-C, --cycle-csv` || print out collected per-cycle maximum\n"
		"statistics saved by `--track` in comma-separated form || || `-S, --sort N` ||\n"
		"sort the tracked cycle stats by column number `N`, see table below || ===\n"
		"Tracked Cycle Stats Columns === For use with `--sort` option. *Negative values\n"
		"sorts descending.* || `0` || Use default sort || || `1, -1` || Sort by decision\n"
		"cycle (use negative for descending) || || `2, -2` || Sort by DC time (use\n"
		"negative for descending) || || `3, -3` || Sort by WM changes (use negative for\n"
		"descending) || || `4, -4` || Sort by production firings (use negative for\n"
		"descending) || == Description == This command prints Soar internal statistics.\n"
		"The argument indicates the component of interest, `--system` is used by\n"
		"default. With the `--system` flag, the stats command lists a summary of run\n"
		"statistics, including the following: * *Version* --- The Soar version number,\n"
		"hostname, and date of the run. * *Number of productions* --- The total number\n"
		"of productions loaded in the system, including all chunks built during problem\n"
		"solving and all default productions. * *Timing Information* --- Might be quite\n"
		"detailed depending on the flags set at compile time. See note on timers below.\n"
		"* *Decision Cycles* --- The total number of decision cycles in the run and the\n"
		"average time-per-decision-cycle in milliseconds. * *Elaboration cycles* --- The\n"
		"total number of elaboration cycles that were executed during the run, the\n"
		"average number of elaboration cycles per decision cycle, and the average time-\n"
		"per-elaboration-cycle in milliseconds. This is not the total number of\n"
		"production firings, as productions can fire in parallel. * *Production Firings*\n"
		"--- The total number of productions that were fired. * *Working Memory Changes*\n"
		"--- This is the total number of changes to working memory. This includes all\n"
		"additions and deletions from working memory. Also prints the average match\n"
		"time. * *Working Memory Size* --- This gives the current, mean and maximum\n"
		"number of working memory elements. The stats argument `--memory` provides\n"
		"information about memory usage and Soar's memory pools, which are used to\n"
		"allocate space for the various data structures used in Soar. The stats argument\n"
		"`--rete` provides information about node usage in the Rete net, the large data\n"
		"structure used for efficient matching in Soar. The `--max` argument reports\n"
		"per-cycle maximum statistics for decision cycle time, working memory changes,\n"
		"and production fires. For example, if Soar runs for three cycles and there were\n"
		"23 working memory changes in the first cycle, 42 in the second, and 15 in the\n"
		"third, the `--max` argument would report the highest of these values (42) and\n"
		"what decision cycle that it occurred in (2nd). Statistics about the time spent\n"
		"executing the decision cycle and number of productions fired are also collected\n"
		"and reported by `--max` in this manner. `--reset` zeros out these statistics so\n"
		"that new maximums can be recorded for future runs. The numbers are also zeroed\n"
		"out with a call to [cmd_init_soar init-soar]. The `--track` argument starts\n"
		"tracking the same stats as the `--max` argument but records all data for each\n"
		"cycle instead of the maximum values. This data can be printed using the `--\n"
		"cycle` or `--cycle-csv` arguments. When printing the data with `--cycle`, it\n"
		"may be sorted using the `--sort` argument and a column integer. Use negative\n"
		"numbers for descending sort. Issue `--stop-track` to reset and clear this data.\n"
		"=== A Note on Timers === The current implementation of Soar uses a number of\n"
		"timers to provide time-based statistics for use in the stats command\n"
		"calculations. These timers are: * total CPU time * total kernel time * phase\n"
		"kernel time (per phase) * phase callbacks time (per phase) * input function\n"
		"time * output function time Total CPU time is calculated from the time a\n"
		"decision cycle (or number of decision cycles) is initiated until stopped.\n"
		"Kernel time is the time spent in core Soar functions. In this case, kernel time\n"
		"is defined as the all functions other than the execution of callbacks and the\n"
		"input and output functions. The total kernel timer is only stopped for these\n"
		"functions. The phase timers (for the kernel and callbacks) track the execution\n"
		"time for individual phases of the decision cycle (i.e., input phase, preference\n"
		"phase, working memory phase, output phase, and decision phase). Because there\n"
		"is overhead associated with turning these timers on and off, the actual kernel\n"
		"time will always be greater than the derived kernel time (i.e., the sum of all\n"
		"the phase kernel timers). Similarly, the total CPU time will always be greater\n"
		"than the derived total (the sum of the other timers) because the overhead of\n"
		"turning these timers on and off is included in the total CPU time. In general,\n"
		"the times reported by the single timers should always be greater than than the\n"
		"corresponding derived time. Additionally, as execution time increases, the\n"
		"difference between these two values will also increase. For those concerned\n"
		"about the performance cost of the timers, all the run time timing calculations\n"
		"can be compiled out of the code by defining `NO_TIMING_STUFF` (in `kernel.h`)\n"
		"before compilation. == Examples == Track per-cycle stats then print them out\n"
		"using default sort: {{{ stats --track run stop stats --cycle }}} Print out per-\n"
		"cycle stats sorting by decision cycle time {{{ stats --cycle --sort 2 }}} Print\n"
		"out per-cycle stats sorting by firing counts, descending {{{ stats --cycle --\n"
		"sort -4 }}} Save per-cycle stats to file `stats.csv` {{{ ctf stats.csv stats --\n"
		"cycle-csv }}} == See Also == [cmd_timers timers] [cmd_init_soar init-soar]\n"
		"[cmd_command_to_file command-to-file]\n"
	;
	docstrings["stop_soar.wiki."] = 
		"#summary stop-soar command documentation = stop-soar = Pause Soar. == Synopsis\n"
		"== {{{ stop-soar [-s] [reason string] }}} === Default Aliases === || `interrupt\n"
		"` || `stop-soar` || || `ss` || `stop-soar` || || `stop` || `stop- soar` || ==\n"
		"Options == || `-s, --self` || Stop only the soar agent where the command is\n"
		"issued. All other agents continue running as previously specified. || ||\n"
		"`reason_string` || An optional string which will be printed when Soar is\n"
		"stopped, to indicate why it was stopped. If left blank, no message will be\n"
		"printed when Soar is stopped. || == Description == The stop-soar command stops\n"
		"any running Soar agents. It sets a flag in the Soar kernel so that Soar will\n"
		"stop running at a \"safe\" point and return control to the user. This command is\n"
		"usually not issued at the command line prompt - a more common use of this\n"
		"command would be, for instance, as a side-effect of pressing a button on a\n"
		"Graphical User Interface (GUI). == See Also == [cmd_run run] == Warnings == If\n"
		"the graphical interface doesn't periodically do an \"update\" of flush the\n"
		"pending I/O, then it may not be possible to interrupt a Soar agent from the\n"
		"command line.\n"
	;
	docstrings["svs.wiki."] = 
		"#summary svs command documentation = svs = Control the behavior of the Spatial\n"
		"Visual System === Synopsis === {{{ svs dir svs help svs connect_viewer svs\n"
		"disconnect_viewer svs filters svs filters. svs commands svs commands. svs\n"
		".scene.world svs .scene.world. svs .scene.properties svs .scene.sgel svs\n"
		".scene.draw on|off svs .scene.clear }}} === Paths === SVS can be navigated by\n"
		"specifying a path after the svs command. This path mimicks a directory\n"
		"structure and is specified by dot notation. || *Path* || *Argument* ||\n"
		"*Description* || || `connect_viewer` || `` || Connects to a svs_viewer\n"
		"listening on the given port || || `disconnect_viewer` || || Disconnects from an\n"
		"active svs_viewer || || `filters` || || Prints out a list of all the filters ||\n"
		"|| `filters.` || || Prints information about a specific filter || || `commands`\n"
		"|| || Prints out a list of all the soar commands || || `commands.` || || Prints\n"
		"information about a specific command || || `.scene.world` || || Prints\n"
		"information about the world || || `.scene.` || || Prints information about a\n"
		"specific node || || `.scene.properties` || || Prints pos/rot/scale/tag info\n"
		"about all nodes || || `.scene.sgel` || `` || Sends an sgel command to the scene\n"
		"|| || `.scene.draw` || `on` || Causes this scene to be the one drawn on the\n"
		"viewer || || `.scene.draw` || `off` || Stops this scene from being drawn in the\n"
		"viewer || || `.scene.clear` || || Removes all objects from the given scene || =\n"
		"== Description === Each path can be followed by `help` to print some help info,\n"
		"or followed by `dir` to see the children of that path. The `` variable is the\n"
		"identifier for the substate you want to examine. For example, to do things to\n"
		"the topstate scene you would use `svs S1.scene`. === Examples === Print the\n"
		"full SVS directory structure {{{ svs . dir }}} Print help information about\n"
		"connect_viewer {{{ svs connect_viewer help }}} Print information about a\n"
		"distance filter {{{ svs filters.distance }}} Print all the nodes in the scene\n"
		"for substate S17 {{{ svs S17.scene.world dir }}} Print information about the\n"
		"node wheel2 on car5 {{{ svs S1.scene.world.car5.wheel2 }}} Add a new node to\n"
		"the scene using SGEL {{{ svs S1.scene.sgel add ball3 world ball .5 position 1 1\n"
		"1 }}}\n"
	;
	docstrings["time.wiki."] = 
		"#summary time command documentation = time = Use a default system clock timer\n"
		"to record the wall time required while executing a command. == Synopsis == {{ {\n"
		"time command [arguments] }}} == Options == || `command` || The command to\n"
		"execute. || || `arguments` || Optional command arguments. ||\n"
	;
	docstrings["timers.wiki."] = 
		"#summary timers command documentation = timers = Toggle on or off the internal\n"
		"timers used to profile Soar. == Synopsis == {{{ timers [options] }}} == Options\n"
		"== || `-d, --disable, --off` || Disable all timers. || || `-e, --enable, --on`\n"
		"|| Enable timers as compiled. || == Description == This command is used to\n"
		"control the timers that collect internal profiling information while Soar is\n"
		"running. With no arguments, this command prints out the current timer status.\n"
		"Timers are ENABLED by default. The default compilation flags for soar enable\n"
		"the basic timers and disable the detailed timers. The timers command can only\n"
		"enable or disable timers that have already been enabled with compiler\n"
		"directives. See the [cmd_stats stats] command for more info on the Soar timing\n"
		"system. == See Also == [cmd_stats stats]\n"
	;
	docstrings["unalias.wiki."] = 
		"#summary unalias command documentation = unalias = Undefine an existing alias =\n"
		"= Synopsis == {{{ unalias name }}} === Default Aliases === || `un` || `\n"
		"[cmd_unalias unalias]` || == Description == This command undefines a previously\n"
		"created alias. This command takes exactly one argument: the name of the alias\n"
		"to remove. Use the [cmd_alias alias] command by itself to list all defined\n"
		"aliases. == Examples == {{{ unalias varprint }}} == See Also == [cmd_alias\n"
		"alias]\n"
	;
	docstrings["verbose.wiki."] = 
		"#summary verbose command documentation = verbose = Control detailed information\n"
		"printed as Soar runs. == Synopsis == {{{ verbose [-ed] }}} == Options == || `-\n"
		"d, --disable, --off` || Turn verbosity off. (default) || || `-e, --enable, --\n"
		"on` || Turn verbosity on. || == Description == The verbose command enables\n"
		"tracing of a number of low-level Soar execution details during a run. The\n"
		"details printed by verbose are usually only valuable to developers debugging\n"
		"Soar implementation details. Invoke with no arguments to query the current\n"
		"setting. == See Also == [cmd_watch watch]\n"
	;
	docstrings["version.wiki."] = 
		"#summary version command documentation = version = Returns the version number\n"
		"of the Soar kernel. == Synopsis == {{{ version }}} == Description == This\n"
		"command gives version information about the current Soar kernel. It returns the\n"
		"version number and build date which can then be stored by the agent or the\n"
		"application.\n"
	;
	docstrings["waitsnc.wiki."] = 
		"#summary waitsnc command documentation = waitsnc = Generate a wait state rather\n"
		"than a state-no-change impasse. == Synopsis == {{{ wait -[e|d] }}} == Options =\n"
		"= || `-e, --enable, --on` || Turns a state-no-change into a `wait` state. || ||\n"
		"`-d, --disable, --off` || Default. A state-no-change generates an impasse. || =\n"
		"= Description == In some systems, espcially those that model expert (fully\n"
		"chunked) knowledge, a state-no-change may represent a _wait state_ rather than\n"
		"an impasse. The waitsnc command allows the user to switch to a mode where a\n"
		"state-no-change that would normally generate an impasse (and subgoaling),\n"
		"instead generates a _wait_ state. At a _wait_ state, the decision cycle will\n"
		"repeat (and the decision cycle count is incremented) but no _state-no-change_\n"
		"impasse (and therefore no substate) will be generated. When issued with no\n"
		"arguments, waitsnc returns its current setting.\n"
	;
	docstrings["warnings.wiki."] = 
		"#summary warnings command documentation = warnings = Enable or disable the\n"
		"printing of warning messages from the Soar kernel. == Synopsis == {{{ warnings\n"
		"[options] }}} == Options == || `-e, --enable, --on` || Default. Print all\n"
		"warning messages from the kernel.|| || `-d, --disable, --off` || Disable all,\n"
		"except most critical, warning messages.|| == Description == Enables and\n"
		"disables the printing of warning messages. If an argument is specified, then\n"
		"the warnings are set to that state. If no argument is given, then the current\n"
		"warnings status is printed. At startup, warnings are initially enabled. If\n"
		"warnings are disabled using this command, then some warnings may still be\n"
		"printed, since some are considered too important to ignore. The warnings that\n"
		"are printed apply to the syntax of the productions, to notify the user when\n"
		"they are not in the correct syntax. When a lefthand side error is discovered\n"
		"(such as conditions that are not linked to a common state or impasse object),\n"
		"the production is generally loaded into production memory anyway, although this\n"
		"production may never match or may seriously slow down the matching process. In\n"
		"this case, a warning would be printed only if warnings were `--on`. Righthand\n"
		"side errors, such as preferences that are not linked to the state, usually\n"
		"result in the production not being loaded, and a warning regardless of the\n"
		"warnings setting.\n"
	;
	docstrings["watch.wiki."] = 
		"#summary watch command documentation = watch = Control the run-time tracing of\n"
		"Soar. == Synopsis == {{{ watch [options] watch level }}} === Default Aliases ==\n"
		"= || `w` || `watch` || == Options == When appropriate, a specific option may be\n"
		"turned off using the `remove` argument. This argument has a numeric alias; you\n"
		"can use `0` for `remove`. A mix of formats is acceptable, even in the same\n"
		"command line. === Basic Watch Settings === || *Option Flag* || *Argument to\n"
		"Option* || *Description* || || `-l, --level` || `0` to `5` (see _Watch Levels_\n"
		"below) || This flag is optional but recommended. Set a specific watch level\n"
		"using an integer `0` to `5`, this is an inclusive operation || || `-N, --none`\n"
		"|| No argument || Turns off all printing about Soar's internals, equivalent to\n"
		"`--level 0` || || `-d, --decisions` || `remove` (optional) || Controls whether\n"
		"state and operator decisions are printed as they are made || || `-p, --phases`\n"
		"|| `remove` (optional) || Controls whether decisions cycle phase names are\n"
		"printed as Soar executes || || `-g, --gds` || `remove` (optional) || Controls\n"
		"printing of warnings about wme changes to GDS || || `-P, --productions` ||\n"
		"`remove` (optional) || Controls whether the names of productions are printed as\n"
		"they fire and retract, equivalent to `-Dujc` || || `-w, --wmes` || `remove`\n"
		"(optional) || Controls the printing of working memory elements that are added\n"
		"and deleted as productions are fired and retracted. || || `-r, --preferences` |\n"
		"| `remove` (optional) || Controls whether the preferences generated by the\n"
		"traced productions are printed when those productions fire or retract || ====\n"
		"Watch Levels ==== Use of the `--level` (`-l`) flag is optional but recommended.\n"
		"|| `0` || watch nothing; equivalent to `-N` || || `1` || watch decisions;\n"
		"equivalent to `-d` || || `2` || watch phases, gds, and decisions; equivalent to\n"
		"`-dpg` || || `3` || watch productions, phases, and decisions; equivalent to `-\n"
		"dpgP` || || `4` || watch wmes, productions, phases, and decisions; equivalent\n"
		"to `-dpgPw` || || `5` || watch preferences, wmes, productions, phases, and\n"
		"decisions; equivalent to `-dpgPwr` || It is important to note that watch level\n"
		"`0` turns off ALL watch options, including backtracing, indifferent selection\n"
		"and learning. However, the other watch levels do not change these settings.\n"
		"That is, if any of these settings is changed from its default, it will retain\n"
		"its new setting until it is either explicitly changed again or the watch level\n"
		"is set to `0`. === Watching Productions === By default, the names of the\n"
		"productions are printed as each production fires and retracts (at watch levels\n"
		"`3` and higher). However, it may be more helpful to watch only a specific\n"
		"_type_ of production. The tracing of firings and retractions of productions can\n"
		"be limited to only certain types by the use of the following flags: || *Option\n"
		"Flag* || *Argument to Option* || *Description* || || `-D, --default` || `remove\n"
		"` (optional) || Control only default-productions as they fire and retract || ||\n"
		"`-u, --user` || `remove` (optional) || Control only user- productions as they\n"
		"fire and retract || || `-c, --chunks` || `remove` (optional) || Control only\n"
		"chunks as they fire and retract || || `-j, -- justifications` || `remove`\n"
		"(optional) || Control only justifications as they fire and retract || || `-T,\n"
		"--template` || `remote` (optional) || Soar-RL template firing trace || *Note:*\n"
		"The [cmd_pwatch pwatch] command is used to watch individual productions\n"
		"specified by name rather than watch a type of productions, such as `--user`.\n"
		"Additionally, when watching productions, users may set the level of detail to\n"
		"be displayed for WMEs that are added or retracted as productions fire and\n"
		"retract. Note that detailed information about WMEs will be printed only for\n"
		"productions that are being watched. || `Option Flag` || `Description` || ||\n"
		"`-n, --nowmes` || When watching productions, do not print any information about\n"
		"matching wmes || || `-t, --timetags` || When watching productions, print only\n"
		"the timetags for matching wmes || || `-f, -- fullwmes` || When watching\n"
		"productions, print the full matching wmes || === Watching Learning === ||\n"
		"*Option Flag* || *Argument to Option* || *Description* || || `-L, --learning` |\n"
		"| `noprint`, `print`, or `fullprint` (see table below) || Controls the printing\n"
		"of chunks/justifications as they are created || As Soar is running, it may\n"
		"create justifications and chunks which are added to production memory. The\n"
		"watch command allows users to monitor when chunks and justifications are\n"
		"created by specifying one of the following arguments to the `--learning`\n"
		"command: || *Argument* || *Alias* || *Effect* || || `noprint` || `0` || Print\n"
		"nothing about new chunks or justifications (default) || || `print` || `1` ||\n"
		"Print the names of new chunks and justifications when created || || `fullprint`\n"
		"|| `2` || Print entire chunks and justifications when created || === Watching\n"
		"other Functions === || *Option Flag* || *Argument to Option* || *Description* |\n"
		"| || `-a, --wma` || `remove` (optional) || Print log of working memory\n"
		"activation events || || `-b, --backtracing` || `remove` (optional) || Print\n"
		"backtracing information when a chunk or justification is created || || `- e,\n"
		"--epmem` || `remove` (optional) || Print episodic retrieval traces and IDs of\n"
		"newly encoded episodes || || `-i, --indifferent-selection` || `remove`\n"
		"(optional) || Print scores for tied operators in random indifferent selection\n"
		"mode || || `-R, --rl` || `remove` (optional) || Print RL debugging output || ||\n"
		"`-s, --smem` || `remove` (optional) || Print log of semantic memory storage\n"
		"events || == Description == The watch command controls the amount of\n"
		"information that is printed out as Soar runs. The basic functionality of this\n"
		"command is to trace various _levels_ of information about Soar's internal\n"
		"workings. The higher the _level_, the more information is printed as Soar runs.\n"
		"At the lowest setting, `0` (`--none`), nothing is printed. The levels are\n"
		"cumulative, so that each successive level prints the information from the\n"
		"previous level as well as some additional information. The default setting for\n"
		"the _level_ is `1`, (`--decisions`). The numerical arguments _inclusively_ turn\n"
		"on all levels up to the number specified. To use numerical arguments to turn\n"
		"off a level, specify a number which is less than the level to be turned off.\n"
		"For instance, to turn off watching of productions, specify `--level 2` (or 1 or\n"
		"0). Numerical arguments are provided for shorthand convenience. For more\n"
		"detailed control over the watch settings, the named arguments should be used.\n"
		"With no arguments, this command prints information about the current watch\n"
		"status, i.e., the values of each parameter. For the named arguments, including\n"
		"the named argument turns on only that setting. To turn off a specific setting,\n"
		"follow the named argument with `remove` or `0`. The named argument `--\n"
		"productions` is shorthand for the four arguments `--default`, `--user`, `--\n"
		"justifications`, and `--chunks`. == Examples == The most common uses of watch\n"
		"are by using the numeric arguments which indicate watch levels. To turn off all\n"
		"printing of Soar internals, do any one of the following (not all possibilities\n"
		"listed): {{{ watch --level 0 watch -l 0 watch -N }}} Although the `--level`\n"
		"flag is optional, its use is recommended: {{{ watch --level 5 # OK watch 5 #\n"
		"OK, avoid }}} Be careful of where the level is on the command line, for\n"
		"example, if you want level 2 and preferences: {{{ watch -r -l 2 # Incorrect: -\n"
		"r flag ignored, level 2 parsed after it and overrides the setting watch -r 2 #\n"
		"Syntax error: 0 or remove expected as optional argument to -r watch -r -l 2 #\n"
		"Incorrect: -r flag ignored, level 2 parsed after it and overrides the setting\n"
		"watch 2 -r # OK, avoid watch -l 2 -r # OK }}} To turn on printing of decisions,\n"
		"phases and productions, do any one of the following (not all possibilities\n"
		"listed): {{{ watch --level 3 watch -l 3 watch --decisions --phases --\n"
		"productions watch -d -p -P }}} Individual options can be changed as well. To\n"
		"turn on printing of decisions and wmes, but not phases and productions, do any\n"
		"one of the following (not all possibilities listed): {{{ watch --level 1 --wmes\n"
		"watch -l 1 -w watch --decisions --wmes watch -d --wmes watch -w --decisions\n"
		"watch -w -d }}} To turn on printing of decisions, productions and wmes, and\n"
		"turns phases off, do any one of the following (not all possibilities listed): {\n"
		"{{ watch --level 4 --phases remove watch -l 4 -p remove watch -l 4 -p 0 watch -\n"
		"d -P -w -p remove }}} To watch the firing and retraction of decisions and\n"
		"_only_ user productions, do any one of the following (not all possibilities\n"
		"listed): {{{ watch -l 1 -u watch -d -u }}} To watch decisions, phases and all\n"
		"productions _except_ user productions and justifications, and to see full wmes,\n"
		"do any one of the following (not all possibilities listed): {{{ watch --\n"
		"decisions --phases --productions --user remove --justifications remove --\n"
		"fullwmes watch -d -p -P -f -u remove -j 0 watch -f -l 3 -u 0 -j 0 }}} == See\n"
		"Also == [cmd_epmem epmem] [cmd_pwatch pwatch] [cmd_print print] [cmd_run run]\n"
		"[cmd_watch_wmes watch-wmes]\n"
	;
	docstrings["watch_wmes.wiki."] = 
		"#summary watch-wmes command documentation = watch-wmes = Print information\n"
		"about wmes matching a certain pattern as they are added and removed. ==\n"
		"Synopsis == {{{ watch-wmes -[a|r] -t type pattern watch-wmes -[l|R] [-t type]\n"
		"}}} == Options == || `-a, --add-filter` || Add a filter to print wmes that meet\n"
		"the type and pattern criteria. || || `-r, --remove-filter` || Delete filters\n"
		"for printing wmes that match the type and pattern criteria. || || `-l, --list-\n"
		"filter` || List the filters of this type currently in use. Does not use the\n"
		"pattern argument. || || `-R, --reset-filter` || Delete all filters of this\n"
		"type. Does not use pattern arg. || || `-t, --type` || Follow with a type of wme\n"
		"filter, see below. || === Pattern === The pattern is an id-attribute-value\n"
		"triplet: {{{ id attribute value }}} Note that `*` can be used in place of the\n"
		"id, attribute or value as a wildcard that maches any string. Note that braces\n"
		"are not used anymore. === Types === When using the -t flag, it must be followed\n"
		"by one of the following: || `adds` || Print info when a wme is `added`. || ||\n"
		"`removes` || Print info when a wme is `retracted`. || || `both` || Print info\n"
		"when a wme is added `or` retracted. || When issuing a `-R` or `-l`, the `-t`\n"
		"flag is optional. Its absence is equivalent to `-t both`. == Description ==\n"
		"This commands allows users to improve state tracing by issuing filter-options\n"
		"that are applied when watching wmes. Users can selectively define which\n"
		"`object-attribute-value` triplets are monitored and whether they are monitored\n"
		"for addition, removal or both, as they go in and out of working memory. *Note:\n"
		"* The functionality of watch-wmes resided in the [cmd_watch watch] command\n"
		"prior to Soar 8.6. == Examples == Users can watch an `attribute` of a\n"
		"particular object (as long as that object already exists): {{{ soar> watch-wmes\n"
		"--add-filter -t both D1 speed * }}} or print WMEs that retract in a specific\n"
		"state (provided the `state` already exists): {{{ soar> watch-wmes --add-filter\n"
		"-t removes S3 * * }}} or watch any relationship between objects: {{{ soar>\n"
		"watch-wmes --add-filter -t both * ontop * }}}\n"
	;
	docstrings["wma.wiki."] = 
		"#summary wma command documentation = wma = Control the behavior of working\n"
		"memory activation. == Synopsis == {{{ wma wma -g|--get wma -s|--set wma -S|-\n"
		"-stats [] wma -t|--timers [] wma -h|--history }}} == Options == || `-g, --get`\n"
		"|| Print current parameter setting || || `-s, --set` || Set parameter value ||\n"
		"|| `-S, --stats` || Print statistic summary or specific statistic || || `-t, --\n"
		"timers` || Print timer summary or specific timer || || `-h, --history` || Print\n"
		"reference history of a WME || == Description == The `wma` command changes the\n"
		"behavior of and displays information about working memory activation. To get\n"
		"the activation of individual WMEs, use `print -i`. To get the reference history\n"
		"of an individual WME, use `wma -h|--history `<`timetag`>. For example: {{ {\n"
		"print --internal s1 (4000016: S1 ^ct 1000000 [3.6]) (4: S1 ^epmem E1 [1]) (11:\n"
		"S1 ^io I1 [1]) (20: S1 ^max 1000000 [3.4]) (18: S1 ^name ct [3.4]) (4000018: S1\n"
		"^operator O1000001 [1] +) (4000019: S1 ^operator O1000001 [1]) (3: S1 ^\n"
		"reward-link R1 [1]) (8: S1 ^smem S2 [1]) (2: S1 ^superstate nil [1]) (14: S1 ^\n"
		"top-state S1 [1]) (1: S1 ^type state [1]) }}} The bracketed values are\n"
		"activation. To get the history of an individual element: {{{ wma --history 18\n"
		"history (60/5999999, first @ d1): 6 @ d1000000 (-1) 6 @ d999999 (-2) 6 @\n"
		"d999998 (-3) 6 @ d999997 (-4) 6 @ d999996 (-5) 6 @ d999995 (-6) 6 @ d999994 (-\n"
		"7) 6 @ d999993 (-8) 6 @ d999992 (-9) 6 @ d999991 (-10) considering WME for\n"
		"decay @ d1019615 }}} This shows the last 60 references (of 5999999 in total,\n"
		"where the first occurred at decision cycle 1). For each reference, it says how\n"
		"many references occurred in the cycle (such as 6 at decision 1000000, which was\n"
		"one cycle ago at the time of executing this command). Note that references\n"
		"during the current cycle will not be reflected in this command (or computed\n"
		"activation value) until the end of output phase. If `forgetting` is `on`, this\n"
		"command will also display the cycle during which the WME will be considered for\n"
		"decay. Even if the WME is not referenced until then, this is not necessarily\n"
		"the cycle at which the WME will be forgotten. However, it is guaranteed that\n"
		"the WME will not be forgotten before this cycle. === Parameters === The `wma`\n"
		"command uses the `--get|--set ` convention rather than individual switches for\n"
		"each parameter. Running `wma` without any switches displays a summary of the\n"
		"parameter settings. || *Parameter* || *Description* || *Possible values* ||\n"
		"*Default* || || `activation` || Enable working memory activation || `on`, `off`\n"
		"|| `off` || || `decay-rate` || WME decay factor || `[`0, 1`]` || 0.5 || ||\n"
		"`decay-thresh` || Forgetting threshold || `(`0, inf`)` || 2.0 || || `forgetting\n"
		"` || Enable removal of WMEs with low activation values || `on`, `off` || `off`\n"
		"|| || `forget-wme` || If `lti` only remove WMEs with a long-term id || `all`,\n"
		"`lti` || `all` || || `max-pow-cache` || Maximum size, in MB, for the internal\n"
		"`pow` cache || 1, 2, ... || 10 || || `petrov-approx` || Enables the (Petrov\n"
		"2006) long-tail approximation || `on`, `off` || `off` || || `timers` || Timer\n"
		"granularity || `off`, `one` || `off` || The `decay-rate` and `decay-thresh`\n"
		"parameters are entered as positive decimals, but are internally converted to,\n"
		"and printed out as, negative. The `petrov-approx` may provide additional\n"
		"validity to the activation value, but comes at a significant computational\n"
		"cost, as the model includes unbounded positive exponential computations, which\n"
		"cannot be reasonably cached. When `activation` is enabled, the system produces\n"
		"a cache of results of calls to the `pow` function, as these can be expensive\n"
		"during runtime. The size of the cache is based upon three run- time parameters\n"
		"(`decay-rate`, `decay-thresh`, and `max-pow-cache`), and one compile time\n"
		"parameter, `WMA_REFERENCES_PER_DECISION` (default value of 50), which estimates\n"
		"the maximum number of times a WME will be referenced during a decision. The\n"
		"cache is composed of `double` variables (i.e. 64-bits, currently) and the\n"
		"number of cache items is computed as follows: e^((decay_thresh - ln (max_refs))\n"
		"/ decay_rate) With the current default parameter values, this will incur about\n"
		"1.04MB of memory. Holding the `decay-rate` constant, reasonable changes to\n"
		"`decay-thresh` (i.e. +/- 5) does not greatly change this value. However, small\n"
		"changes to `decay-rate` will dramatically change this profile. For instance,\n"
		"keeping everything else constant, a `decay-thresh` of 0.3 requires ~2.7GB and\n"
		"0.2 requires ~50TB. Thus, the `max-pow-cache` parameter serves to allow you to\n"
		"control the space vs. time tradeoff by capping the maximum amount of memory\n"
		"used by this cache. If `max-pow-cache` is much smaller than the result of the\n"
		"equation above, you may experience somewhat degraded performance due to\n"
		"relatively frequent system calls to `pow`. If `forget-wme` is `lti` and\n"
		"`forgetting` is `on`, only those WMEs whose id is a long-term identifier *at\n"
		"the decision of forgetting* will be removed from working memory. If, for\n"
		"instance, the id is stored to semantic memory after the decision of forgetting,\n"
		"the WME will not be removed till some time after the next WME reference (such\n"
		"as testing/creation by a rule). === Statistics === Working memory activation\n"
		"tracks statistics over the lifetime of the agent. These can be accessed using\n"
		"`wma --stats `. Running `wma --stats` without a statistic will list the values\n"
		"of all statistics. Unlike timers, statistics will always be updated. Available\n"
		"statistics are: || *Name* || *Label* || *Description* || || `forgotten-wmes` ||\n"
		"Forgotten WMEs || Number of WMEs removed from working memory due to forgetting\n"
		"|| === Timers === Working memory activation also has a set of internal timers\n"
		"that record the durations of certain operations. Because fine-grained timing\n"
		"can incur runtime costs, working memory activation timers are off by default.\n"
		"Timers of different levels of detail can be turned on by issuing `wma --set\n"
		"timers `, where the levels can be `off` or `one`, `one` being most detailed and\n"
		"resulting in all timers being turned on. Note that none of the working memory\n"
		"activation statistics nor timing information is reported by the `stats`\n"
		"command. All timer values are reported in seconds. Level one || `wma_forgetting\n"
		"` || Time to process forgetting operations each cycle || || `wma_history` ||\n"
		"Time to consolidate reference histories each cycle || == See Also == [cmd_print\n"
		"print]\n"
	;
}
